indicators:
  - key: "ME_Child_Total"
    description: "ME_Child_Total_label"
    indicatorQuery: "SELECT count(*) from ec_client child
                      JOIN client_register_type reg_type ON child.base_entity_id=reg_type.base_entity_id
                      WHERE reg_type.register_type='child'
                      AND '%s' = strftime('%Y-%m-%d', child.date)"
    grouping: "child"

  # Additional DHIS2 Indicators

  - key: "ME_Fully_Immunized_Static"
    description: "Fully Immunized"
    indicatorQuery: "select age,count(*) from (select
                     CASE
                           WHEN round(julianday('now')-julianday(ec_client.dob)) > 365.0 THEN 'Over_1_Static'
                           WHEN round(julianday('now')-julianday(ec_client.dob)) < 365.0 THEN 'Under_1_Static'
                           ELSE 'Null'
                           END age,count(*)
                     from vaccines
                     join ec_client
                     on vaccines.base_entity_id = ec_client.base_entity_id
                     where '%s' = strftime('%Y-%m-%d', ec_client.date)
                     and  vaccines.child_location_id=vaccines.location_id OR vaccines.child_location_id IS NULL
                     group by vaccines.base_entity_id,age
                     having sum(case when name = 'bcg' then 1 else 0 end) > 0
                     and sum(case when name = 'ipv' then 1 else 0 end) > 0
                     and sum(case when name = 'mr_1' then 1 else 0 end) > 0
                     and sum(case when name = 'opv_1' then 1 else 0 end) > 0
                     and sum(case when name = 'opv_3' then 1 else 0 end) > 0
                     and sum(case when name = 'pcv_1' then 1 else 0 end) > 0
                     and sum(case when name = 'penta_1' then 1 else 0 end) > 0
                     and sum(case when name = 'penta_2' then 1 else 0 end) > 0
                     and sum(case when name = 'penta_3' then 1 else 0 end) > 0
                     and sum(case when name = 'rota_1' then 1 else 0 end) > 0)"
    isMultiResult: true
    expectedIndicators:
      - "ME_Fully_Immunized_Static_Over_1_Static"
      - "ME_Fully_Immunized_Static_Under_1_Static"

    grouping: "child"

  - key: "ME_Fully_Immunized_Outreach"
    description: "Fully Immunized"
    indicatorQuery: "select age,count(*) from (select
                     CASE
                           WHEN round(julianday('now')-julianday(ec_client.dob)) > 365.0 THEN 'Over_1_Outreach'
                           WHEN round(julianday('now')-julianday(ec_client.dob)) < 365.0 THEN 'Under_1_Outreach'
                           ELSE 'Null'
                           END age,count(*)
                     from vaccines
                     join ec_client
                     on vaccines.base_entity_id = ec_client.base_entity_id
                     where '%s' = strftime('%Y-%m-%d', ec_client.date)
                     and vaccines.child_location_id <> vaccines.location_id OR vaccines.child_location_id IS NOT NULL
                     group by vaccines.base_entity_id,age
                     having sum(case when name = 'bcg' then 1 else 0 end) > 0
                     and sum(case when name = 'ipv' then 1 else 0 end) > 0
                     and sum(case when name = 'mr_1' then 1 else 0 end) > 0
                     and sum(case when name = 'opv_1' then 1 else 0 end) > 0
                     and sum(case when name = 'opv_3' then 1 else 0 end) > 0
                     and sum(case when name = 'pcv_1' then 1 else 0 end) > 0
                     and sum(case when name = 'penta_1' then 1 else 0 end) > 0
                     and sum(case when name = 'penta_2' then 1 else 0 end) > 0
                     and sum(case when name = 'penta_3' then 1 else 0 end) > 0
                     and sum(case when name = 'rota_1' then 1 else 0 end) > 0)"
    isMultiResult: true
    expectedIndicators:
      - "ME_Fully_Immunized_Outreach_Over_1_Outreach"
      - "ME_Fully_Immunized_Outreach_Under_1_Outreach"
    grouping: "child"

  - key: "ME_Vaccines_Age_Static"
    description: "ME_Vaccines_Age_Static_label"
    indicatorQuery: "SELECT vaccines.name,
                       CASE
                          WHEN round(julianday('now')-julianday(ec_client.dob)) > 365.0 THEN 'Over_1_Static'
                          WHEN round(julianday('now')-julianday(ec_client.dob)) < 365.0 THEN 'Under_1_Static'
                          ELSE 'Null'
                          END age, count(*)
                      FROM vaccines
                      INNER JOIN ec_client
                      ON vaccines.base_entity_id = ec_client.base_entity_id
                      WHERE vaccines.date >= round((julianday(strftime('%Y-%m-%d', '%s', 'utc')) - 2440587.5) * 86400.0 * 1000)
                      AND vaccines.date < round((julianday(strftime('%Y-%m-%d', '%s', '+1 day', 'utc')) - 2440587.5) * 86400.0 * 1000)
                      AND vaccines.child_location_id = vaccines.location_id OR vaccines.child_location_id IS NULL
                      AND ec_client.dob >= date('now', '-5 years')
                      GROUP BY vaccines.name, age"
    isMultiResult: true
    expectedIndicators:
      - "ME_Vaccines_Age_Static_bcg_Over_1_Static"
      - "ME_Vaccines_Age_Static_bcg_Under_1_Static"
      - "ME_Vaccines_Age_Static_opv_0_Over_1_Static"
      - "ME_Vaccines_Age_Static_opv_0_Under_1_Static"
      - "ME_Vaccines_Age_Static_opv_1_Over_1_Static"
      - "ME_Vaccines_Age_Static_opv_1_Under_1_Static"
      - "ME_Vaccines_Age_Static_opv_2_Over_1_Static"
      - "ME_Vaccines_Age_Static_opv_2_Under_1_Static"
      - "ME_Vaccines_Age_Static_opv_3_Over_1_Static"
      - "ME_Vaccines_Age_Static_opv_3_Under_1_Static"
      - "ME_Vaccines_Age_Static_penta_1_Over_1_Static"
      - "ME_Vaccines_Age_Static_penta_1_Under_1_Static"
      - "ME_Vaccines_Age_Static_penta_2_Over_1_Static"
      - "ME_Vaccines_Age_Static_penta_2_Under_1_Static"
      - "ME_Vaccines_Age_Static_penta_3_Over_1_Static"
      - "ME_Vaccines_Age_Static_penta_3_Under_1_Static"
      - "ME_Vaccines_Age_Static_pcv_1_Over_1_Static"
      - "ME_Vaccines_Age_Static_pcv_1_Under_1_Static"
      - "ME_Vaccines_Age_Static_pcv_2_Over_1_Static"
      - "ME_Vaccines_Age_Static_pcv_2_Under_1_Static"
      - "ME_Vaccines_Age_Static_rota_1_Over_1_Static"
      - "ME_Vaccines_Age_Static_rota_1_Under_1_Static"
      - "ME_Vaccines_Age_Static_rota_2_Over_1_Static"
      - "ME_Vaccines_Age_Static_rota_2_Under_1_Static"
      - "ME_Vaccines_Age_Static_mv_1_Over_1_Static"
      - "ME_Vaccines_Age_Static_mv_1_Under_1_Static"
      - "ME_Vaccines_Age_Static_mv_2_Over_1_Static"
      - "ME_Vaccines_Age_Static_mv_2_Under_1_Static"
      - "ME_Vaccines_Age_Static_mv_3_Over_1_Static"
      - "ME_Vaccines_Age_Static_mv_3_Under_1_Static"
      - "ME_Vaccines_Age_Static_mv_4_Over_1_Static"
      - "ME_Vaccines_Age_Static_mv_4_Under_1_Static"
      - "ME_Vaccines_Age_Static_mr_1_Over_1_Static"
      - "ME_Vaccines_Age_Static_mr_1_Under_1_Static"
      - "ME_Vaccines_Age_Static_mr_2_Over_1_Static"
      - "ME_Vaccines_Age_Static_mr_2_Under_1_Static"
      - "ME_Vaccines_Age_Static_ipv_Over_1_Static"
      - "ME_Vaccines_Age_Static_ipv_Under_1_Static"
    grouping: "child"

  - key: "ME_Vaccines_Age_Outreach"
    description: "ME_Vaccines_Age_Outreach_label"
    indicatorQuery: "SELECT vaccines.name,
                       CASE
                          WHEN round(julianday('now')-julianday(ec_client.dob)) > 365.0 THEN 'Over_1_Outreach'
                          WHEN round(julianday('now')-julianday(ec_client.dob)) < 365.0 THEN 'Under_1_Outreach'
                          ELSE 'Null'
                          END age, count(*) counter
                      FROM vaccines
                      INNER JOIN ec_client
                      ON vaccines.base_entity_id = ec_client.base_entity_id
                      WHERE vaccines.date >= round((julianday(strftime('%Y-%m-%d', '%s', 'utc')) - 2440587.5) * 86400.0 * 1000)
                      AND vaccines.date < round((julianday(strftime('%Y-%m-%d', '%s', '+1 day', 'utc')) - 2440587.5) * 86400.0 * 1000)
                      AND vaccines.child_location_id = vaccines.location_id OR vaccines.child_location_id IS NOT NULL
                      AND ec_client.dob >= date('now', '-5 years')
                      GROUP BY vaccines.name, age"
    isMultiResult: true
    expectedIndicators:
      - "ME_Vaccines_Age_Outreach_bcg_Over_1_Outreach"
      - "ME_Vaccines_Age_Outreach_bcg_Under_1_Outreach"
      - "ME_Vaccines_Age_Outreach_opv_0_Over_1_Outreach"
      - "ME_Vaccines_Age_Outreach_opv_0_Under_1_Outreach"
      - "ME_Vaccines_Age_Outreach_opv_1_Over_1_Outreach"
      - "ME_Vaccines_Age_Outreach_opv_1_Under_1_Outreach"
      - "ME_Vaccines_Age_Outreach_opv_2_Over_1_Outreach"
      - "ME_Vaccines_Age_Outreach_opv_2_Under_1_Outreach"
      - "ME_Vaccines_Age_Outreach_opv_3_Over_1_Outreach"
      - "ME_Vaccines_Age_Outreach_opv_3_Under_1_Outreach"
      - "ME_Vaccines_Age_Outreach_penta_1_Over_1_Outreach"
      - "ME_Vaccines_Age_Outreach_penta_1_Under_1_Outreach"
      - "ME_Vaccines_Age_Outreach_penta_2_Over_1_Outreach"
      - "ME_Vaccines_Age_Outreach_penta_2_Under_1_Outreach"
      - "ME_Vaccines_Age_Outreach_penta_3_Over_1_Outreach"
      - "ME_Vaccines_Age_Outreach_penta_3_Under_1_Outreach"
      - "ME_Vaccines_Age_Outreach_pcv_1_Over_1_Outreach"
      - "ME_Vaccines_Age_Outreach_pcv_1_Under_1_Outreach"
      - "ME_Vaccines_Age_Outreach_pcv_2_Over_1_Outreach"
      - "ME_Vaccines_Age_Outreach_pcv_2_Under_1_Outreach"
      - "ME_Vaccines_Age_Outreach_rota_1_Over_1_Outreach"
      - "ME_Vaccines_Age_Outreach_rota_1_Under_1_Outreach"
      - "ME_Vaccines_Age_Outreach_rota_2_Over_1_Outreach"
      - "ME_Vaccines_Age_Outreach_rota_2_Under_1_Outreach"
      - "ME_Vaccines_Age_Outreach_mv_1_Over_1_Outreach"
      - "ME_Vaccines_Age_Outreach_mv_1_Under_1_Outreach"
      - "ME_Vaccines_Age_Outreach_mv_2_Over_1_Outreach"
      - "ME_Vaccines_Age_Outreach_mv_2_Under_1_Outreach"
      - "ME_Vaccines_Age_Outreach_mv_3_Over_1_Outreach"
      - "ME_Vaccines_Age_Outreach_mv_3_Under_1_Outreach"
      - "ME_Vaccines_Age_Outreach_mr_1_Over_1_Outreach"
      - "ME_Vaccines_Age_Outreach_mr_1_Under_1_Outreach"
      - "ME_Vaccines_Age_Outreach_mr_2_Over_1_Outreach"
      - "ME_Vaccines_Age_Outreach_mr_2_Under_1_Outreach"
      - "ME_Vaccines_Age_Outreach_ipv_Over_1_Outreach"
      - "ME_Vaccines_Age_Outreach_ipv_Under_1_Outreach"
    grouping: "child"

  - key: "ME_Recurring_Age_Static"
    description: "ME_Recurring_Age_Static_label"
    indicatorQuery: "SELECT recur_type.name,
                       CASE
                            WHEN round(julianday('now')-julianday(ec_client.dob)) > 365.0 THEN 'Over_1_Static'
                            WHEN round(julianday('now')-julianday(ec_client.dob)) < 365.0 THEN 'Under_1_Static'
                            ELSE 'Null'
                            END age, ec_client.gender, count(*) counter
                       FROM recurring_service_records recur
                       INNER JOIN ec_client
                       ON recur.base_entity_id = ec_client.base_entity_id
                       JOIN recurring_service_types recur_type
                       ON recur_type._id = recur.recurring_service_id
                       WHERE recur.date >= round((julianday(strftime('%Y-%m-%d', '%s', 'utc')) - 2440587.5) * 86400.0 * 1000)
                       AND recur.date < round((julianday(strftime('%Y-%m-%d', '%s', '+1 day', 'utc')) - 2440587.5) * 86400.0 * 1000)
                       AND ec_client.dob >= date('now', '-5 years')
                       AND recur.child_location_id=recur.location_id OR recur.child_location_id IS NULL
                       AND recur_type.name IN ('Vit_A_1', 'Vit_A_2','Deworming_1','Deworming_2')
                       GROUP BY recur_type.name, age"
    isMultiResult: true
    expectedIndicators:
      - "ME_Recurring_Age_Static_Deworming_1_Over_1_Static_Male"
      - "ME_Recurring_Age_Static_Deworming_1_Under_1_Static_Male"
      - "ME_Recurring_Age_Static_Deworming_2_Over_1_Static_Male"
      - "ME_Recurring_Age_Static_Deworming_2_Under_1_Static_Male"
      - "ME_Recurring_Age_Static_Vit_A_1_Over_1_Static_Male"
      - "ME_Recurring_Age_Static_Vit_A_1_Under_1_Static_Male"
      - "ME_Recurring_Age_Static_Vit_A_2_Over_1_Static_Male"
      - "ME_Recurring_Age_Static_Vit_A_2_Under_1_Static_Male"
      - "ME_Recurring_Age_Static_Deworming_1_Over_1_Static_Female"
      - "ME_Recurring_Age_Static_Deworming_1_Under_1_Static_Female"
      - "ME_Recurring_Age_Static_Deworming_2_Over_1_Static_Female"
      - "ME_Recurring_Age_Static_Deworming_2_Under_1_Static_Female"
      - "ME_Recurring_Age_Static_Vit_A_1_Over_1_Static_Female"
      - "ME_Recurring_Age_Static_Vit_A_1_Under_1_Static_Female"
      - "ME_Recurring_Age_Static_Vit_A_2_Over_1_Static_Female"
      - "ME_Recurring_Age_Static_Vit_A_2_Under_1_Static_Female"
    grouping: "child"

  - key: "ME_Recurring_Age_Outreach"
    description: "ME_Recurring_Age_Outreach_label"
    indicatorQuery: "SELECT recur_type.name,
                         CASE
                              WHEN round(julianday('now')-julianday(ec_client.dob)) >= 365.0 THEN 'Over_1_Outreach'
                              WHEN round(julianday('now')-julianday(ec_client.dob)) < 365.0 THEN 'Under_1_Outreach'
                              ELSE 'Null'
                              END age, ec_client.gender, count(*) counter
                         FROM recurring_service_records recur
                         INNER JOIN ec_client
                         ON recur.base_entity_id = ec_client.base_entity_id
                         JOIN recurring_service_types recur_type
                         ON recur_type._id = recur.recurring_service_id
                         WHERE recur.date >= round((julianday(strftime('%Y-%m-%d', '%s', 'utc')) - 2440587.5) * 86400.0 * 1000)
                         AND recur.date < round((julianday(strftime('%Y-%m-%d', '%s', '+1 day', 'utc')) - 2440587.5) * 86400.0 * 1000)
                         AND ec_client.dob >= date('now', '-5 years')
                         AND recur.child_location_id <> recur.location_id OR recur.child_location_id IS NOT NULL
                         AND recur_type.name IN ('Vit_A_1', 'Vit_A_2','Deworming_1','Deworming_2')
                         GROUP BY recur_type.name, age"
    isMultiResult: true
    expectedIndicators:
      - "ME_Recurring_Age_Outreach_Deworming_1_Over_1_Outreach_Male"
      - "ME_Recurring_Age_Outreach_Deworming_1_Under_1_Outreach_Male"
      - "ME_Recurring_Age_Outreach_Deworming_2_Over_1_Outreach_Male"
      - "ME_Recurring_Age_Outreach_Deworming_2_Under_1_Outreach_Male"
      - "ME_Recurring_Age_Outreach_Vit_A_1_Over_1_Outreach_Male"
      - "ME_Recurring_Age_Outreach_Vit_A_1_Under_1_Outreach_Male"
      - "ME_Recurring_Age_Outreach_Vit_A_2_Over_1_Outreach_Male"
      - "ME_Recurring_Age_Outreach_Vit_A_2_Under_1_Outreach_Male"
      - "ME_Recurring_Age_Outreach_Deworming_1_Over_1_Outreach_Female"
      - "ME_Recurring_Age_Outreach_Deworming_1_Under_1_Outreach_Female"
      - "ME_Recurring_Age_Outreach_Deworming_2_Over_1_Outreach_Female"
      - "ME_Recurring_Age_Outreach_Deworming_2_Under_1_Outreach_Female"
      - "ME_Recurring_Age_Outreach_Vit_A_1_Over_1_Outreach_Female"
      - "ME_Recurring_Age_Outreach_Vit_A_1_Under_1_Outreach_Female"
      - "ME_Recurring_Age_Outreach_Vit_A_2_Over_1_Outreach_Female"
      - "ME_Recurring_Age_Outreach_Vit_A_2_Under_1_Outreach_Female"
    grouping: "child"

  # ANC Indicators
  - key: "ME_Number_Of_Women_Registered"
    description: "Number of women registered"
    indicatorQuery: "select count(1) from (select base_entity_id from previous_contact
                     where previous_contact.contact_no = '1' group by base_entity_id
                     having sum(case when key = 'contact_date' and value = strftime('%Y-%m-%d', '%s', 'localtime') then 1 else 0 end) > 0)"
    grouping: "anc"

  - key: "ME_Pregnancy_Tests_Done_In_The_First_Trimester"
    description: "Pregnancy tests Done In the first trimester"
    indicatorQuery: "select count(1) from (select base_entity_id from previous_contact
                     where previous_contact.contact_no = '1' group by base_entity_id
                     having sum(case when key = 'pregnancy_test_first_trimester' and value = 'yes' then 1 else 0 end) > 0
                     and sum(case when key = 'contact_date' and value = strftime('%Y-%m-%d', '%s', 'localtime') then 1 else 0 end) > 0)"
    grouping: "anc"

  - key: "ME_Pregnancy_Tests_Done_After_The_First_Trimester"
    description: "Pregnancy tests Done AFTER the first trimester"
    indicatorQuery: "select count(1) from (select base_entity_id from previous_contact
                   where previous_contact.contact_no = '1' group by base_entity_id
                   having sum(case when key = 'pregnancy_test_first_trimester' and value = 'no' then 1 else 0 end) > 0
                   and sum(case when key = 'contact_date' and value = strftime('%Y-%m-%d', '%s', 'localtime') then 1 else 0 end) > 0)"
    grouping: "anc"

  - key: "ME_Week_Of_First_ANC_Visit_0_12_weeks"
    description: "Week of First ANC Visit (0-12 weeks)"
    indicatorQuery: "select count(1) from (select base_entity_id from previous_contact
                   where previous_contact.contact_no = '1' group by base_entity_id
                   having sum(case when key = 'gest_age_openmrs' and cast(value as integer) <= 12 then 1 else 0 end) > 0
                   and sum(case when key = 'contact_date' and value = strftime('%Y-%m-%d', '%s', 'localtime') then 1 else 0 end) > 0)"
    grouping: "anc"

  - key: "ME_Week_Of_First_ANC_Visit_13_plus_weeks"
    description: "Week of First ANC Visit (13+ weeks)"
    indicatorQuery: "select count(1) from (select base_entity_id from previous_contact
                   where previous_contact.contact_no = '1' group by base_entity_id
                   having sum(case when key = 'gest_age_openmrs' and cast(value as integer) > 12 then 1 else 0 end) > 0
                   and sum(case when key = 'contact_date' and value = strftime('%Y-%m-%d', '%s', 'localtime') then 1 else 0 end) > 0)"
    grouping: "anc"

  - key: "ME_HIV_Status_First_Visit_Prev_Negative"
    description: "HIV status first visit (Prev. negative)"
    indicatorQuery: "select count(1) from (select base_entity_id from previous_contact
                   where previous_contact.contact_no = '1' group by base_entity_id
                   having sum(case when key = 'health_conditions' and instr(value, 'hiv') = 0 then 1 else 0 end) > 0
                   and sum(case when key = 'contact_date' and value = strftime('%Y-%m-%d', '%s', 'localtime') then 1 else 0 end ) > 0)"
    grouping: "anc"

  - key: "ME_HIV_Status_First_Visit_Prev_Positive"
    description: "HIV status first visit (Prev. positive)"
    indicatorQuery: "select count(1) from (select base_entity_id from previous_contact
                   where previous_contact.contact_no = '1' group by base_entity_id
                   having sum(case when key = 'health_conditions' and instr(value, 'hiv') > 0 then 1 else 0 end) > 0
                   and sum(case when key = 'contact_date' and value = strftime('%Y-%m-%d', '%s', 'localtime') then 1 else 0 end ) > 0)"
    grouping: "anc"

  - key: "ME_HIV_Status_First_Visit_New_Negative"
    description: "HIV status first visit (New negative)"
    indicatorQuery: "select count(1) from (SELECT distinct base_entity_id FROM  previous_contact
                   where previous_contact.contact_no = '1' group by base_entity_id
                   having sum(case when key = 'hiv_test_result' and value = 'negative' then 1 else 0 end ) > 0
                   and sum(case when key = 'contact_date' and value = strftime('%Y-%m-%d', '%s', 'localtime') then 1 else 0 end ) > 0)"
    grouping: "anc"

  - key: "ME_HIV_Status_First_Visit_New_Positive"
    description: "HIV status first visit (New positive)"
    indicatorQuery: "select count(1) from (SELECT distinct base_entity_id FROM  previous_contact
                   where previous_contact.contact_no = '1' group by base_entity_id
                   having sum(case when key = 'hiv_test_result' and value = 'positive' then 1 else 0 end ) > 0
                   and sum(case when key = 'contact_date' and value = strftime('%Y-%m-%d', '%s', 'localtime') then 1 else 0 end ) > 0)"
    grouping: "anc"

  - key: "ME_HIV_Status_First_Visit_Not_Done"
    description: "HIV status first visit (Not done)"
    indicatorQuery: "select count(1) from (SELECT distinct base_entity_id FROM  previous_contact
                   where previous_contact.contact_no = '1' group by base_entity_id
                   having sum(case when key = 'hiv_test_status' and value = 'not_done' then 1 else 0 end ) > 0
                   or sum(case when key = 'hiv_test_status' then 1 else 0 end ) = 0
                   and sum(case when key = 'contact_date' and value = strftime('%Y-%m-%d', '%s', 'localtime') then 1 else 0 end ) > 0)"
    grouping: "anc"

  - key: "ME_ART_Status_First_Visit_Not_On_ART"
    description: "ART status first visit (Not on ART)"
    indicatorQuery: "select count(1) from (SELECT distinct base_entity_id FROM  previous_contact
                   where previous_contact.contact_no = '1' group by base_entity_id
                   having sum(case when key = 'health_conditions' and instr(value, 'hiv') > 0 then 1 else 0 end) > 0
                   and sum(case when key = 'medications' and instr(value, 'arvs') = 0 then 1 else 0 end ) > 0
                   and sum(case when key = 'contact_date' and value = strftime('%Y-%m-%d', '%s', 'localtime') then 1 else 0 end ) > 0)"
    grouping: "anc"

  - key: "ME_ART_Status_First_Visit_On_ART_Before_ANC"
    description: "ART status first visit( On ART before ANC)"
    indicatorQuery: "select count(1) from (SELECT base_entity_id FROM  previous_contact
                   where previous_contact.contact_no = '1' group by base_entity_id
                   having sum(case when key = 'health_conditions' and instr(value, 'hiv') > 0 then 1 else 0 end) > 0
                   and sum(case when key = 'medications' and instr(value, 'arvs') > 0 then 1 else 0 end ) > 0
                   and sum(case when key = 'contact_date' and value = strftime('%Y-%m-%d', '%s', 'localtime') then 1 else 0 end ) > 0)"
    grouping: "anc"

  - key: "ME_ART_Status_First_Visit_Start_ART_0_27_Weeks"
    description: "ART status First Visit (Start ART 0-27 weeks)"
    indicatorQuery: "select count(1) from (SELECT base_entity_id FROM  previous_contact
                   where previous_contact.contact_no = '1' group by base_entity_id
                   having sum(case when key = 'art_medication' and value = 'done' > 0 then 1 else 0 end ) > 0
                   and sum(case when key = 'hiv_test_result' and value = 'positive' then 1 else 0 end ) > 0
                   and sum(case when key = 'gest_age_openmrs' and cast(value as integer) <= 27 then 1 else 0 end ) > 0
                   and sum(case when key = 'contact_date' and value = strftime('%Y-%m-%d', '%s', 'localtime') then 1 else 0 end ) > 0)"
    grouping: "anc"

  - key: "ME_ART_Status_First_Visit_Start_ART_28_plus_Weeks"
    description: "ART status first visit (Start ART 28+ weeks)"
    indicatorQuery: "select count(1) from (SELECT base_entity_id FROM  previous_contact
                   where previous_contact.contact_no = '1' group by base_entity_id
                   having sum(case when key = 'art_medication' and value = 'done' > 0 then 1 else 0 end ) > 0
                   and sum(case when key = 'hiv_test_result' and value = 'positive' then 1 else 0 end ) > 0
                   and sum(case when key = 'gest_age_openmrs' and cast(value as integer) >= 28 then 1 else 0 end ) > 0
                   and sum(case when key = 'contact_date' and value = strftime('%Y-%m-%d', '%s', 'localtime') then 1 else 0 end ) > 0)"
    grouping: "anc"

  ##Booking Cohort
  - key: "ME_HIV_Status_Final_Prev_Negative"
    description: "HIV status Final (Prev negative)"
    indicatorQuery: "select count(1) from (select base_entity_id from previous_contact
                   where previous_contact.contact_no = '1' group by base_entity_id
                   having sum(case when key = 'health_conditions' and instr(value, 'hiv') = 0 then 1 else 0 end) > 0
                   and sum(case when key = 'contact_date' and value = strftime('%Y-%m-%d',  date('%s', '-6 months', 'localtime')) then 1 else 0 end) > 0)"
    grouping: "anc"

  - key: "ME_HIV_Status_Final_Prev_Positive"
    description: "HIV status Final (Prev positive)"
    indicatorQuery: "select count(1) from (select base_entity_id from previous_contact
                   where previous_contact.contact_no = '1' group by base_entity_id
                   having sum(case when key = 'health_conditions' and instr(value, 'hiv') > 0 then 1 else 0 end) > 0
                   and sum(case when key = 'contact_date' and value = strftime('%Y-%m-%d',  date('%s', '-6 months', 'localtime')) then 1 else 0 end) > 0)"
    grouping: "anc"

  - key: "ME_HIV_Status_Final_New_Negative"
    description: "HIV status Final (New negative)"
    indicatorQuery: "select count(1) from (select z.base_entity_id from previous_contact z
                     where z.contact_no = '1' group by z.base_entity_id
                     having sum(case when z.key = 'contact_date' and z.value = strftime('%Y-%m-%d',  date('%s', '-6 months', 'localtime')) then 1 else 0 end) > 0
                     ) a
                     JOIN
                     ( SELECT y.base_entity_id
                       FROM previous_contact y
                       JOIN ec_mother_details x
                       ON y.base_entity_id=x.base_entity_id
                       WHERE y.key = 'hiv_test_date'  OR key = 'hiv_test_result'
                       GROUP BY y.base_entity_id
                       HAVING sum(case when key = 'hiv_test_result' and value = 'negative' then 1 else 0 end ) > 0
                       AND
                       sum(case when key = 'hiv_test_date' and (julianday(x.edd)-julianday(strftime('%Y-%m-%d',substr(y.value, 7, 4)||'-'||substr(y.value, 4,2)||'-'||substr(y.value, 1,2))))/7 <=6
                        Then 1 else 0 end ) > 0  ) b
                     ON a.base_entity_id=b.base_entity_id"
    grouping: "anc"

  - key: "ME_HIV_Status_Final_New_Positive"
    description: "HIV status Final (New positive)"
    indicatorQuery: "select count(1) from (select z.base_entity_id from previous_contact z
                    where z.contact_no = '1' group by z.base_entity_id
                    having sum(case when z.key = 'contact_date' and z.value = strftime('%Y-%m-%d',  date('%s', '-6 months', 'localtime')) then 1 else 0 end) > 0
                    ) a
                    JOIN
                    ( SELECT y.base_entity_id
                      FROM previous_contact y
                      JOIN ec_mother_details x
                      ON y.base_entity_id=x.base_entity_id
                      WHERE y.key = 'hiv_test_date'  OR key = 'hiv_test_result'
                      GROUP BY y.base_entity_id
                      HAVING sum(case when key = 'hiv_test_result' and value = 'positive' then 1 else 0 end ) > 0
                      AND
                      sum(case when key = 'hiv_test_date' and (julianday(x.edd)-julianday(strftime('%Y-%m-%d',substr(y.value, 7, 4)||'-'||substr(y.value, 4,2)||'-'||substr(y.value, 1,2))))/7 <=6
                       then 1 else 0 end ) > 0    ) b
                    ON a.base_entity_id=b.base_entity_id"
    grouping: "anc"

  - key: "ME_HIV_Status_Final_Not_Done"
    description: "HIV status Final (Not done)"
    indicatorQuery: "select count(1) from (select z.base_entity_id from previous_contact z
                      where z.contact_no = '1' group by z.base_entity_id
                      having sum(case when z.key = 'contact_date' and z.value = strftime('%Y-%m-%d',  date('%s', '-6 months', 'localtime')) then 1 else 0 end) > 0
                      ) a
                      JOIN
                      ( select y.base_entity_id from previous_contact y
                      group by y.base_entity_id
                      having sum(case when key = 'hiv_test_status' and value = 'not_done' then 1 else 0 end ) > 0
                      or sum(case when key = 'hiv_test_status' then 1 else 0 end ) = 0
                      ) b
                      ON a.base_entity_id=b.base_entity_id"
    grouping: "anc"

  - key: "ME_ART_Status_Final_Visit_Not_On_ART"
    description: "ART status Final Visit (Not on ART)"
    indicatorQuery: "select count(1) from (select z.base_entity_id from previous_contact z
                      where z.contact_no = '1' group by z.base_entity_id
                      having sum(case when z.key = 'contact_date' and z.value = strftime('%Y-%m-%d',  date('%s', '-6 months', 'localtime')) then 1 else 0 end) > 0
                      ) a
                      JOIN
                      ( SELECT y.base_entity_id
                        FROM previous_contact y
                        JOIN ec_mother_details x
                        ON y.base_entity_id=x.base_entity_id
                        WHERE y.key = 'hiv_test_date'  OR key = 'hiv_test_result'
                        GROUP BY y.base_entity_id
                        HAVING sum(case when key = 'hiv_test_status' and value = 'not_done'  then 1 else 0 end ) > 0
                        or sum(case when key = 'hiv_test_status' then 1 else 0 end ) = 0
                        AND
                        sum(case when key = 'hiv_test_date' and (julianday(x.edd)-julianday(strftime('%Y-%m-%d',substr(y.value, 7, 4)||'-'||substr(y.value, 4,2)||'-'||substr(y.value, 1,2))))/7 >=6
                         THEN 1 else 0 end ) > 0  ) b
                      ON a.base_entity_id=b.base_entity_id"
    grouping: "anc"

  - key: "ME_ART_Status_Final_Visit_On_ART_Before_ANC"
    description: "ART status Final Visit ( On ART before ANC)"
    indicatorQuery: "select count(1) from (select z.base_entity_id from previous_contact z
                where z.contact_no = '1' group by z.base_entity_id
                having sum(case when z.key = 'contact_date' and z.value = strftime('%Y-%m-%d',  date('%s', '-6 months', 'localtime')) then 1 else 0 end) > 0
                ) a
                JOIN
                ( select y.base_entity_id from previous_contact y
                group by y.base_entity_id
                having sum(case when key = 'medications' and instr(value, 'arvs') > 0 then 1 else 0 end ) > 0
                ) b
                ON a.base_entity_id = b.base_entity_id"
    grouping: "anc"

  - key: "ME_ART_Status_Final_Visit_Start_ART_0_27_Weeks"
    description: "ART status Final Visit (Start ART 0-27 weeks)"
    indicatorQuery: "select count(1) from (select z.base_entity_id from previous_contact z
                    where z.contact_no = '1' group by z.base_entity_id
                    having sum(case when z.key = 'contact_date' and z.value = strftime('%Y-%m-%d',  date('%s', '-6 months', 'localtime')) then 1 else 0 end) > 0
                    ) a
                    JOIN
                    ( SELECT y.base_entity_id from previous_contact y
                      JOIN ec_mother_details x
                      ON y.base_entity_id=x.base_entity_id
                      JOIN (select base_entity_id,min(contact_no) contact_no from previous_contact
                      WHERE key = 'art_medication'
                      GROUP BY base_entity_id) D
                      ON y.base_entity_id=D.base_entity_id
                      WHERE y.contact_no=D.contact_no
                      GROUP by y.base_entity_id
                      HAVING sum(case when key = 'art_medication' and value = 'done' then 1 else 0 end ) > 0
                      AND sum(case when key = 'hiv_test_result' and value = 'positive' then 1 else 0 end ) > 0
                      AND sum(case when key = 'contact_date' and (julianday(x.edd)-julianday(strftime('%Y-%m-%d',substr(y.value, 7, 4)||'-'||substr(y.value, 4,2)||'-'||substr(y.value, 1,2))))/7 <=13 then 1 else 0 end)>0
                    ) b
                    ON a.base_entity_id=b.base_entity_id"
    grouping: "anc"

  - key: "ME_ART_Status_Final_Visit_Start_ART_28_plus_Weeks"
    description: "ART status Final Visit (Start ART 28+ weeks)"
    indicatorQuery: "select count(1) from (select z.base_entity_id from previous_contact z
                        where z.contact_no = '1' group by z.base_entity_id
                        having sum(case when z.key = 'contact_date' and z.value = strftime('%Y-%m-%d',  date('%s', '-6 months', 'localtime')) then 1 else 0 end) > 0
                        ) a
                        JOIN
                        ( SELECT y.base_entity_id from previous_contact y
                          JOIN ec_mother_details x
                          ON y.base_entity_id=x.base_entity_id
                          JOIN (select base_entity_id,min(contact_no) contact_no from previous_contact
                          WHERE key = 'art_medication'
                          GROUP BY base_entity_id) D
                          ON y.base_entity_id=D.base_entity_id
                          WHERE y.contact_no=D.contact_no
                          GROUP by y.base_entity_id
                          HAVING sum(case when key = 'art_medication' and value = 'done' then 1 else 0 end ) > 0
                          AND sum(case when key = 'hiv_test_result' and value = 'positive' then 1 else 0 end ) > 0
                          AND sum(case when key = 'contact_date' and (julianday(x.edd)-julianday(strftime('%Y-%m-%d',substr(y.value, 7, 4)||'-'||substr(y.value, 4,2)||'-'||substr(y.value, 1,2))))/7 >13 then 1 else 0 end)>0
                        ) b
                        ON a.base_entity_id=b.base_entity_id"
    grouping: "anc"

  - key: "ME_CPT_out_of_HIV_positive"
    description: "On CPT out of HIV+"
    indicatorQuery: "select count(1) from (select z.base_entity_id from previous_contact z
                            where z.contact_no = '1' group by z.base_entity_id
                            having sum(case when z.key = 'contact_date' and z.value = strftime('%Y-%m-%d',  date('%s', '-6 months', 'localtime')) then 1 else 0 end) > 0
                            ) a
                            JOIN
                            ( select y.base_entity_id from previous_contact y
                            group by y.base_entity_id
                            having sum(case when key = 'cpt_medication' and value = 'done' then 1 else 0 end ) > 0
                            and sum(case when key = 'hiv_test_result' and value = 'positive' then 1 else 0 end ) > 0
                           ) b
                            ON a.base_entity_id=b.base_entity_id"
    grouping: "anc"

  - key: "ME_Not_on_CPT"
    description: "Not on CPT"
    indicatorQuery: "select count(1) from (select z.base_entity_id from previous_contact z
                    where z.contact_no = '1' group by z.base_entity_id
                    having sum(case when z.key = 'contact_date' and z.value = strftime('%Y-%m-%d',  date('%s', '-6 months', 'localtime')) then 1 else 0 end) > 0
                    ) a
                    JOIN
                    ( select y.base_entity_id from previous_contact y
                    group by y.base_entity_id
                    having sum(case when key = 'cpt_medication' and value  <>  'done' then 1 else 0 end ) > 0
                    and sum(case when key = 'hiv_test_result' and value = 'positive' then 1 else 0 end ) > 0
                    or sum(case when key = 'cpt_medication' then 1 else 0 end ) = 0
                   ) b
                    ON a.base_entity_id=b.base_entity_id"
    grouping: "anc"

  - key: "ME_NVP_syrup_given"
    description: "NVP syrup given"
    indicatorQuery: "select count(1) from (select z.base_entity_id from previous_contact z
                     where z.contact_no = '1' group by z.base_entity_id
                     having sum(case when z.key = 'contact_date' and z.value = strftime('%Y-%m-%d',  date('%s', '-6 months', 'localtime')) then 1 else 0 end) > 0
                     ) a
                     JOIN
                     ( select y.base_entity_id from previous_contact y
                     group by y.base_entity_id
                     having sum(case when key = 'nvp_medication' and value = 'done' then 1 else 0 end ) > 0
                     and sum(case when key = 'hiv_test_result' and value = 'positive' then 1 else 0 end ) > 0
                    ) b
                     ON a.base_entity_id=b.base_entity_id"
    grouping: "anc"

  - key: "ME_NVP_syrup_not_given"
    description: "NVP syrup not given"
    indicatorQuery: "select count(1) from (select z.base_entity_id from previous_contact z
                    where z.contact_no = '1' group by z.base_entity_id
                    having sum(case when z.key = 'contact_date' and z.value = strftime('%Y-%m-%d',  date('%s', '-6 months', 'localtime')) then 1 else 0 end) > 0
                    ) a
                    JOIN
                    ( select y.base_entity_id from previous_contact y
                    group by y.base_entity_id
                    having sum(case when key = 'nvp_medication' and value  <>  'done' then 1 else 0 end ) > 0
                    and sum(case when key = 'hiv_test_result' and value = 'positive' then 1 else 0 end ) > 0
                    or sum(case when key = 'nvp_medication' then 1 else 0 end ) = 0
                    ) b
                   ON a.base_entity_id=b.base_entity_id"
    grouping: "anc"

  - key: "ME_Total_Visits_Per_Woman_With_1_Visit"
    description: "Total visits per woman with 1 visit"
    indicatorQuery: "select count(1) from (select z.base_entity_id from previous_contact z
                    where z.contact_no = '1' group by z.base_entity_id
                    having sum(case when z.key = 'contact_date' and z.value = strftime('%Y-%m-%d',  date('%s', '-6 months', 'localtime')) then 1 else 0 end) > 0
                    ) a
                     JOIN
                    ( select y.base_entity_id from ec_mother_details y
                    where y.next_contact = '2'  group by y.base_entity_id
                    ) b
                    ON a.base_entity_id=b.base_entity_id"
    grouping: "anc"

  - key: "ME_Total_Visits_Per_Woman_With_2_Visits"
    description: "Total visits per woman with 2 visits"
    indicatorQuery: "select count(1) from (select z.base_entity_id from previous_contact z
                      where z.contact_no = '1' group by z.base_entity_id
                      having sum(case when z.key = 'contact_date' and z.value = strftime('%Y-%m-%d',  date('%s', '-6 months', 'localtime')) then 1 else 0 end) > 0
                      ) a
                       JOIN
                      ( select y.base_entity_id from ec_mother_details y
                        where y.next_contact = '3' group by y.base_entity_id
                      ) b
                      ON a.base_entity_id=b.base_entity_id"
    grouping: "anc"

  - key: "ME_Total_Visits_Per_Woman_With_3_Visits"
    description: "Total visits per woman with 3 visits"
    indicatorQuery: "select count(1) from (select z.base_entity_id from previous_contact z
                      where z.contact_no = '1' group by z.base_entity_id
                      having sum(case when z.key = 'contact_date' and z.value = strftime('%Y-%m-%d',  date('%s', '-6 months', 'localtime')) then 1 else 0 end) > 0
                      ) a
                       JOIN
                      (
                      select y.base_entity_id from ec_mother_details y
                       where y.next_contact = '4'  group by y.base_entity_id
                      ) b
                      ON a.base_entity_id=b.base_entity_id"
    grouping: "anc"

  - key: "ME_Total_Visits_Per_Woman_With_4_Visits"
    description: "Total visits per woman with 4 visits"
    indicatorQuery: "select count(1) from (select z.base_entity_id from previous_contact z
                     where z.contact_no = '1' group by z.base_entity_id
                     having sum(case when z.key = 'contact_date' and z.value = strftime('%Y-%m-%d',  date('%s', '-6 months', 'localtime')) then 1 else 0 end) > 0
                     ) a
                      JOIN
                     (select y.base_entity_id from ec_mother_details y
                      where y.next_contact = '5'  group by y.base_entity_id
                     ) b
                     ON a.base_entity_id=b.base_entity_id"
    grouping: "anc"

  - key: "ME_Total_Visits_Per_Woman_With_5_plus_Visits"
    description: "Total visits per woman with 5+ visits"
    indicatorQuery: "select count(1) from (select z.base_entity_id from previous_contact z
                       where z.contact_no = '1' group by z.base_entity_id
                       having sum(case when z.key = 'contact_date' and z.value = strftime('%Y-%m-%d',  date('%s', '-6 months', 'localtime')) then 1 else 0 end) > 0
                       ) a
                        JOIN
                       ( select y.base_entity_id from ec_mother_details y
                         where cast(y.next_contact as integer) >= 5 group by y.base_entity_id
                       ) b
                       ON a.base_entity_id=b.base_entity_id"
    grouping: "anc"

  - key: "ME_With_Preeclampsia"
    description: "With preeclampsia"
    indicatorQuery: "select count(1) from (select z.base_entity_id from previous_contact z
                      where z.contact_no = '1' group by z.base_entity_id
                      having sum(case when z.key = 'contact_date' and z.value = strftime('%Y-%m-%d',  date('%s', '-6 months', 'localtime')) then 1 else 0 end) > 0
                      ) a
                      JOIN
                      ( select y.base_entity_id from previous_contact y
                       group by y.base_entity_id
                      having sum(case when y.key = 'severe_preeclampsia' and value  = '1' then 1 else 0 end) > 0
                      or sum(case when y.key = 'preeclampsia' and value  = '1' then 1 else 0 end) > 0
                      ) b
                       ON a.base_entity_id=b.base_entity_id"
    grouping: "anc"

  - key: "ME_With_No_Preeclampsia"
    description: "With no pre eclampsia"
    indicatorQuery: "select count(1) from (select z.base_entity_id from previous_contact z
                     where z.contact_no = '1' group by z.base_entity_id
                     having sum(case when z.key = 'contact_date' and z.value = strftime('%Y-%m-%d',  date('%s', '-6 months', 'localtime')) then 1 else 0 end) > 0
                     ) a
                     JOIN
                     ( select y.base_entity_id from previous_contact y
                     group by y.base_entity_id
                     having sum(case when key = 'severe_preeclampsia' and value  <> '1' then 1 else 0 end) > 0
                     and sum(case when key = 'preeclampsia' and value  <> '1' then 1 else 0 end) > 0
                     ) b
                     ON a.base_entity_id=b.base_entity_id"
    grouping: "anc"

  - key: "ME_Total_Number_With_TDV_doses_less_than_2"
    description: "Total number with TDV doses < 2"
    indicatorQuery: "select count(1) from (select z.base_entity_id from previous_contact z
                      where z.contact_no = '1' group by z.base_entity_id
                      having sum(case when z.key = 'contact_date' and z.value = strftime('%Y-%m-%d',  date('%s', '-6 months', 'localtime')) then 1 else 0 end) > 0
                      ) a
                      JOIN
                      ( select y.base_entity_id from previous_contact y
                      group by y.base_entity_id
                      having sum (case when key = 'tt_immun_status' and (value = 'tdv_not_received' or value = '1_received' or value = 'unknown' or value = 'ttcv_not_received') then 1 else 0 end) > 0
                      ) b
                      ON a.base_entity_id=b.base_entity_id"
    grouping: "anc"

  - key: "ME_Total_Number_With_TDV_doses_2_plus"
    description: "Total number with TDV doses  2+"
    indicatorQuery: "select count(1) from (select z.base_entity_id from previous_contact z
                     where z.contact_no = '1' group by z.base_entity_id
                     having sum(case when z.key = 'contact_date' and z.value = strftime('%Y-%m-%d',  date('%s', '-6 months', 'localtime')) then 1 else 0 end) > 0
                     ) a
                     JOIN
                     ( select y.base_entity_id from previous_contact y
                    group by y.base_entity_id
                    having sum (case when key = 'tt_immun_status' and (value = '2-4_doses' or value = '5_tdv_doses_received' or value = '3_doses') then 1 else 0 end) > 0
                    or sum (case when key = 'tt2_dose_number' and value='1' then 1 else 0 end) > 0
                    ) b
                    ON a.base_entity_id=b.base_entity_id"
    grouping: "anc"

  - key: "ME_SP_Doses_0_Dose"
    description: "SP doses 0 dose"
    indicatorQuery: "select count(1) from (select z.base_entity_id from previous_contact z
                      where z.contact_no = '1' group by z.base_entity_id
                      having sum(case when z.key = 'contact_date' and z.value = strftime('%Y-%m-%d',  date('%s', '-6 months', 'localtime')) then 1 else 0 end) > 0
                      ) a
                      JOIN
                      ( select y.base_entity_id from previous_contact y
                      group by y.base_entity_id
                      having sum (case when key = 'iptp_sp1' and value <> 'done' then 1 else 0 end) > 0
                      or sum (case when key = 'iptp_sp1' then 1 else 0 end) = 0
                      ) b
                      ON a.base_entity_id=b.base_entity_id"
    grouping: "anc"

  - key: "ME_SP_Doses_1_Dose"
    description: "SP doses 1 dose"
    indicatorQuery: "select count(1) from (select z.base_entity_id from previous_contact z
                     where z.contact_no = '1' group by z.base_entity_id
                     having sum(case when z.key = 'contact_date' and z.value = strftime('%Y-%m-%d',  date('%s', '-6 months', 'localtime')) then 1 else 0 end) > 0
                     ) a
                      JOIN
                     ( select y.base_entity_id from previous_contact y
                     group by y.base_entity_id
                     having sum (case when key = 'iptp_sp1' and value = 'done' then 1 else 0 end) > 0
                     and sum (case when key = 'iptp_sp2' then 1 else 0 end) = 0
                     ) b
                     ON a.base_entity_id=b.base_entity_id"
    grouping: "anc"

  - key: "ME_SP_Doses_2_Dose"
    description: "SP doses 2 dose"
    indicatorQuery: "select count(1) from (select z.base_entity_id from previous_contact z
                     where z.contact_no = '1' group by z.base_entity_id
                     having sum(case when z.key = 'contact_date' and z.value = strftime('%Y-%m-%d',  date('%s', '-6 months', 'localtime')) then 1 else 0 end) > 0
                     ) a
                      JOIN
                     ( select y.base_entity_id from previous_contact y
                     group by y.base_entity_id
                     having sum (case when key = 'iptp_sp2' and value = 'done' then 1 else 0 end) > 0
                     and sum (case when key = 'iptp_sp3' then 1 else 0 end) = 0
                     ) b
                     ON a.base_entity_id=b.base_entity_id"
    grouping: "anc"

  - key: "ME_SP_Doses_3_plus_Dose"
    description: "SP doses 3+ dose"
    indicatorQuery: "select count(1) from (select z.base_entity_id from previous_contact z
                     where z.contact_no = '1' group by z.base_entity_id
                     having sum(case when z.key = 'contact_date' and z.value = strftime('%Y-%m-%d',  date('%s', '-6 months', 'localtime')) then 1 else 0 end) > 0
                     ) a
                      JOIN
                     ( select y.base_entity_id from previous_contact y
                     group by y.base_entity_id
                     having sum (case when key = 'iptp_sp3' and value = 'done' then 1 else 0 end) > 0
                      ) b
                     ON a.base_entity_id=b.base_entity_id"
    grouping: "anc"

  - key: "ME_Albendazole_doses_None"
    description: "Albendazole doses None"
    indicatorQuery: "select count(1) from (select z.base_entity_id from previous_contact z
                     group by z.base_entity_id
                     having sum(case when z.key = 'contact_date' and z.value = strftime('%Y-%m-%d',  date('%s', '-6 months', 'localtime')) then 1 else 0 end) > 0
                     ) a
                      JOIN
                     ( select y.base_entity_id from previous_contact y
                     group by y.base_entity_id
                     having sum(case when key = 'deworm' and value = 'not done' then 1 else 0 end ) > 0
                     or sum(case when key = 'deworm' then 1 else 0 end) = 0
                     ) b
                     ON a.base_entity_id=b.base_entity_id"
    grouping: "anc"

  - key: "ME_Albendazole_doses_One_dose"
    description: "Albendazole doses 1 dose"
    indicatorQuery: "select count(1) from (select z.base_entity_id from previous_contact z
                     group by z.base_entity_id
                     having sum(case when z.key = 'contact_date' and z.value = strftime('%Y-%m-%d',  date('%s', '-6 months', 'localtime')) then 1 else 0 end) > 0
                     ) a
                      JOIN
                     ( select y.base_entity_id from previous_contact y
                     group by y.base_entity_id
                     having sum(case when key = 'deworm' and value = 'done' then 1 else 0 end ) > 0
                     ) b
                     ON a.base_entity_id=b.base_entity_id"
    grouping: "anc"

  - key: "ME_ITN_Bed_Nets_Given"
    description: "ITN (bed nets) given"
    indicatorQuery: "select count(1) from (select z.base_entity_id from previous_contact z
                     where z.contact_no = '1' group by z.base_entity_id
                     having sum(case when z.key = 'contact_date' and z.value = strftime('%Y-%m-%d',  date('%s', '-6 months', 'localtime')) then 1 else 0 end) > 0
                     ) a
                      JOIN
                     ( select y.base_entity_id from previous_contact y
                     group by y.base_entity_id
                     having sum (case when key = 'itn_given' and value = 'done' then 1 else 0 end) > 0
                     ) b
                     ON a.base_entity_id=b.base_entity_id"
    grouping: "anc"

  - key: "ME_ITN_Bed_Nets_Not_Given"
    description: "ITN (bed nets) not given"
    indicatorQuery: "select count(1) from (select z.base_entity_id from previous_contact z
                     where z.contact_no = '1' group by z.base_entity_id
                     having sum(case when z.key = 'contact_date' and z.value = strftime('%Y-%m-%d',  date('%s', '-6 months', 'localtime')) then 1 else 0 end) > 0
                     ) a
                      JOIN
                     ( select y.base_entity_id from previous_contact y
                     group by y.base_entity_id
                      having sum (case when key = 'itn_given' and value <> 'done' then 1 else 0 end) > 0
                      or sum (case when key = 'itn_given' then 1 else 0 end) = 0
                      ) b
                     ON a.base_entity_id=b.base_entity_id"
    grouping: "anc"

  - key: "ME_Hb_g_dl_less_than_7"
    description: "Hb (g/dl)  < 7"
    indicatorQuery: "select count(1) from (select z.base_entity_id from previous_contact z
                    where z.contact_no = '1' group by z.base_entity_id
                    having sum(case when z.key = 'contact_date' and z.value = strftime('%Y-%m-%d',  date('%s', '-6 months', 'localtime')) then 1 else 0 end) > 0
                    ) a
                     JOIN
                    ( select y.base_entity_id from previous_contact y
                    group by y.base_entity_id
                     having sum(case when key = 'hb_result' and cast(value as integer) < 7 then 1 else 0 end) > 0
                     ) b
                    ON a.base_entity_id=b.base_entity_id"
    grouping: "anc"

  - key: "ME_Hb_g_over_dl_greater_than_and_equal_to_7"
    description: "Hb (g/dl) >= 7"
    indicatorQuery: "select count(1) from (select z.base_entity_id from previous_contact z
                     where z.contact_no = '1' group by z.base_entity_id
                     having sum(case when z.key = 'contact_date' and z.value = strftime('%Y-%m-%d',  date('%s', '-6 months', 'localtime')) then 1 else 0 end) > 0
                     ) a
                     JOIN
                     ( select y.base_entity_id from previous_contact y
                     group by y.base_entity_id
                     having sum(case when key = 'hb_result' and cast(value as integer) >= 7 then 1 else 0 end) > 0
                     ) b
                     ON a.base_entity_id=b.base_entity_id"
    grouping: "anc"

  - key: "ME_Hb_g_over_dl_ND"
    description: "Hb (g/dl) ND"
    indicatorQuery: "select count(1) from (select z.base_entity_id from previous_contact z
                     where z.contact_no = '1' group by z.base_entity_id
                     having sum(case when z.key = 'contact_date' and z.value = strftime('%Y-%m-%d',  date('%s', '-6 months', 'localtime')) then 1 else 0 end) > 0
                     ) a
                     JOIN
                     ( select y.base_entity_id from previous_contact y
                     group by y.base_entity_id
                     having sum( case when key = 'hb_test_status' and value = 'not_done' then 1 else 0 end) > 0
                     or sum( case when key = 'hb_test_status' then 1 else 0 end) = 0
                     ) b
                     ON a.base_entity_id=b.base_entity_id"
    grouping: "anc"

  - key: "ME_Syphilis_Status_Negative"
    description: "Syphilis status Negative"
    indicatorQuery: "select count(1) from (select z.base_entity_id from previous_contact z
                     where z.contact_no = '1' group by z.base_entity_id
                     having sum(case when z.key = 'contact_date' and z.value = strftime('%Y-%m-%d',  date('%s', '-6 months', 'localtime')) then 1 else 0 end) > 0
                     ) a
                     JOIN
                     ( select y.base_entity_id from previous_contact y
                     group by y.base_entity_id
                     having sum(case when key = 'syphilis_positive' and value = '0' then 1 else 0 end ) > 0
                     ) b
                     ON a.base_entity_id=b.base_entity_id"
    grouping: "anc"

  - key: "ME_Syphilis_Status_Positive"
    description: "Syphilis status Positive"
    indicatorQuery: "select count(1) from (select z.base_entity_id from previous_contact z
                     where z.contact_no = '1' group by z.base_entity_id
                     having sum(case when z.key = 'contact_date' and z.value = strftime('%Y-%m-%d',  date('%s', '-6 months', 'localtime')) then 1 else 0 end) > 0
                     ) a
                     JOIN
                     ( select y.base_entity_id from previous_contact y
                     group by y.base_entity_id
                     having sum(case when key = 'syphilis_positive' and value = '1' then 1 else 0 end ) > 0
                     ) b
                     ON a.base_entity_id=b.base_entity_id"
    grouping: "anc"

  - key: "ME_Syphilis_Status_Not_Done"
    description: "Syphilis status Not Done"
    indicatorQuery: "select count(1) from (select z.base_entity_id from previous_contact z
                     where z.contact_no = '1' group by z.base_entity_id
                     having sum(case when z.key = 'contact_date' and z.value = strftime('%Y-%m-%d',  date('%s', '-6 months', 'localtime')) then 1 else 0 end) > 0
                     ) a
                     JOIN
                     ( select y.base_entity_id from previous_contact y
                     group by y.base_entity_id
                     having sum(case when key = 'syph_test_status' and value = 'not_done' then 1 else 0 end ) > 0
                     or sum(case when key = 'syph_test_status' then 1 else 0 end ) = 0
                     ) b
                     ON a.base_entity_id=b.base_entity_id"
    grouping: "anc"

  - key: "ME_FeFo_More_Than_120"
    description: "FeFo Tablets given more than 120"
    indicatorQuery: "select count(1) from (select z.base_entity_id from previous_contact z
                     where z.contact_no = '1' group by z.base_entity_id
                     having sum(case when z.key = 'contact_date' and z.value = strftime('%Y-%m-%d',  date('%s', '-6 months', 'localtime')) then 1 else 0 end) > 0
                     ) a
                     JOIN
                     ( select y.base_entity_id from previous_contact y
                     where y.key = 'fefo_tablets_number_anaemia' or 'fefo_tablets_number'
                     group by y.base_entity_id
                     having sum(value)>= 120
                     ) b
                     ON a.base_entity_id=b.base_entity_id"
    grouping: "anc"

  - key: "ME_FeFo_Less_Than_120"
    description: "FeFo Tablets given less than 120"
    indicatorQuery: "select count(1) from (select z.base_entity_id from previous_contact z
                     where z.contact_no = '1' group by z.base_entity_id
                     having sum(case when z.key = 'contact_date' and z.value = strftime('%Y-%m-%d',  date('%s', '-6 months', 'localtime')) then 1 else 0 end) > 0
                     ) a
                     JOIN
                     ( select y.base_entity_id from previous_contact y
                     where y.key = 'fefo_tablets_number_anaemia' or 'fefo_tablets_number'
                     group by y.base_entity_id
                     having sum(value) < 120
                     ) b
                     ON a.base_entity_id=b.base_entity_id"
    grouping: "anc"

  ##OPD Reports
  - key: "ME_Malaria_Cases_Confirmed"
    description: "Malaria cases"
    indicatorQuery: "SELECT
                     	CASE
                     		WHEN round(julianday('now') - julianday(ec_client.dob)) > 1827 THEN 'Over_5'
                     		WHEN round(julianday('now') - julianday(ec_client.dob)) <= 1827 THEN 'Under_5'
                     		ELSE 'Null'
                     	END age, count(*)
                        FROM opd_diagnosis_detail b
                        INNER JOIN ec_client
                        ON b.base_entity_id = ec_client.base_entity_id
                        WHERE b.code in ('code_32aCo','code_32bCo')
                        and '%s' = strftime('%Y-%m-%d', b.created_at)
                        GROUP  BY age"
    isMultiResult: true
    expectedIndicators:
      - "ME_Malaria_Cases_Confirmed_Over_5"
      - "ME_Malaria_Cases_Confirmed_Under_5"
    grouping: "opd"

  - key: "ME_Malaria_Cases_Presumed"
    description: "Malaria cases"
    indicatorQuery: "SELECT
                     	CASE
                     		WHEN round(julianday('now') - julianday(ec_client.dob)) > 1827 THEN 'Over_5'
                     		WHEN round(julianday('now') - julianday(ec_client.dob)) <= 1827 THEN 'Under_5'
                     		ELSE 'Null'
                     	END age, count(*)
                     	FROM opd_diagnosis_detail b
                     	INNER JOIN ec_client
                     	ON b.base_entity_id = ec_client.base_entity_id
                     	WHERE b.code in ('code_32aPr','code_32bPr')
                     	AND b.visit_id NOT IN (SELECT distinct(c.visit_id) from opd_test_conducted c where c.test_type like '%Malaria%')
                        AND '%s' = strftime('%Y-%m-%d', b.created_at)
                     	GROUP  BY age"
    isMultiResult: true
    expectedIndicators:
      - "ME_Malaria_Cases_Presumed_Over_5"
      - "ME_Malaria_Cases_Presumed_Under_5"
    grouping: "opd"

  - key: "ME_Total_Malaria_Cases"
    description: "Malaria total cases"
    indicatorQuery: "SELECT
                     	CASE
                     		WHEN round(julianday('now') - julianday(ec_client.dob)) > 1827 THEN 'Over_5'
                     		WHEN round(julianday('now') - julianday(ec_client.dob)) <= 1827 THEN 'Under_5'
                     		ELSE 'Null'
                     	END age, count(*)
                     	FROM opd_diagnosis_detail b
                     	INNER JOIN ec_client
                     	ON b.base_entity_id = ec_client.base_entity_id
                     	WHERE b.code in ('code_32aCo','code_32bCo','code_32aPr','code_32bPr')
                     	AND '%s' = strftime('%Y-%m-%d', b.created_at)
                     	GROUP BY age"
    isMultiResult: true
    expectedIndicators:
      - "ME_Total_Malaria_Cases_Over_5"
      - "ME_Total_Malaria_Cases_Under_5"
    grouping: "opd"

  - key: "ME_Anti_Malaria_Treatment"
    description: "Malaria anti malarial treatment"
    indicatorQuery: "SELECT b.type,
                     	CASE
                     		WHEN round(julianday('now') - julianday(ec_client.dob)) > 1827 THEN 'Over_5'
                     		WHEN round(julianday('now') - julianday(ec_client.dob)) <= 1827 THEN 'Under_5'
                     		ELSE 'Null'
                     	END age, count(*)
                        FROM opd_diagnosis_detail b
                        INNER JOIN ec_client
                        ON b.base_entity_id = ec_client.base_entity_id
                        WHERE b.code in ('code_32aCo','code_32bCo')
                        AND '%s' = strftime('%Y-%m-%d', b.created_at)
                        GROUP BY age,b.type"
    isMultiResult: true
    expectedIndicators:
      - "ME_Anti_Malaria_Treatment_Presumed_Over_5"
      - "ME_Anti_Malaria_Treatment_Presumed_Under_5"
      - "ME_Anti_Malaria_Treatment_Confirmed_Over_5"
      - "ME_Anti_Malaria_Treatment_Confirmed_Under_5"
    grouping: "opd"

  - key: "ME_Malaria_Test"
    description: "Malaria tests"
    indicatorQuery: "SELECT
                     CASE
                     	WHEN b.test_type='Malaria MRDT' THEN 'mRDT'
                     	WHEN b.test_type='Malaria Microscopy' THEN 'Microscopy'
                     ELSE 'Null' END malaria_test,
                     CASE
                     	WHEN round(julianday('now') - julianday(ec_client.dob)) > 1827 THEN 'Over_5'
                     	WHEN round(julianday('now') - julianday(ec_client.dob)) <= 1827 THEN 'Under_5'
                     ELSE 'Null' END age,
                     count(*)
                     FROM opd_test_conducted b
                     INNER JOIN ec_client
                     ON b.base_entity_id = ec_client.base_entity_id
                     WHERE b.test_type in ('Malaria MRDT','Malaria Microscopy')
                     AND '%s' = strftime('%Y-%m-%d', b.created_at)
                     GROUP  BY age,malaria_test"
    isMultiResult: true
    expectedIndicators:
      - "ME_Malaria_Test_mRDT_Over_5"
      - "ME_Malaria_Test_mRDT_Under_5"
      - "ME_Malaria_Test_Microscopy_Over_5"
      - "ME_Malaria_Test_Microscopy_Under_5"
    grouping: "opd"

  - key: "ME_Positive_Malaria_Cases"
    description: "Positive malaria cases"
    indicatorQuery: "SELECT
                     CASE
                     	WHEN b.test_type='Malaria MRDT' THEN 'mRDT'
                     	WHEN b.test_type='Malaria - Microscopy' THEN 'Microscopy'
                     ELSE 'Null' END malaria_test,
                     CASE
                     	WHEN round(julianday('now') - julianday(ec_client.dob)) > 1827 THEN 'Over_5'
                     	WHEN round(julianday('now') - julianday(ec_client.dob)) <= 1827 THEN 'Under_5'
                     ELSE 'Null' END age, count(*)
                     FROM opd_test_conducted b
                     INNER JOIN ec_client
                     ON b.base_entity_id = ec_client.base_entity_id
                     WHERE b.test_type in ('Malaria MRDT','Malaria Microscopy')
                     AND b.result='Positive'
                     AND '%s' = strftime('%Y-%m-%d', b.created_at)
                     GROUP  BY age,malaria_test,b.result"
    isMultiResult: true
    expectedIndicators:
      - "ME_Positive_Malaria_Cases_mRDT_Over_5"
      - "ME_Positive_Malaria_Cases_mRDT_Under_5"
      - "ME_Positive_Malaria_Cases_Microscopy_Over_5"
      - "ME_Positive_Malaria_Cases_Microscopy_Under_5"
    grouping: "opd"

  - key: "ME_Total_Suspected_Malaria"
    description: "Total suspected malaria cases"
    indicatorQuery: "SELECT count(*) FROM (SELECT b.base_entity_id,b.visit_id
                     FROM opd_diagnosis_detail b
                     	WHERE b.code in ('code_32aPr','code_32bPr')
                     		AND b.visit_id NOT IN (SELECT distinct(c.visit_id) from opd_test_conducted c where c.test_type like '%Malaria%')
                     		AND '%s' = strftime('%Y-%m-%d', b.created_at)
                     	UNION
                     SELECT d.base_entity_id, d.visit_id
                     FROM opd_test_conducted d
                     	WHERE d.test_type in ('Malaria MRDT','Malaria Microscopy')
                     	AND '%s' = strftime('%Y-%m-%d', d.created_at)
                     )"
    grouping: "opd"

  ##Maternity
  - key: "ME_HIV_Previous"
    description: "Maternity HIV previous positive"
    indicatorQuery: "SELECT count(1)
                     FROM maternity_outcome
                     WHERE hiv_status_previous='Positive'
                     AND '%s' = strftime('%Y-%m-%d', date)"
    grouping: "maternity"

  - key: "ME_HIV_Current"
    description: "Maternity HIV current"
    indicatorQuery: "SELECT
                     CASE
                     	WHEN hiv_status_current='Negative' THEN 'New_Negative'
                     	WHEN hiv_status_current ='Positive' THEN 'New_Positive'
                     	ELSE 'Not_Done'
                     END descr,count (*)
                     FROM maternity_outcome
                     WHERE '%s' = strftime('%Y-%m-%d', date)
                     GROUP BY descr"
    isMultiResult: true
    expectedIndicators:
      - "ME_HIV_Current_New_Negative"
      - "ME_HIV_Current_New_Positive"
      - "ME_HIV_Current_Not_Done"
    grouping: "maternity"

  - key: "ME_ART_Start"
    description: "Maternity ART start period"
    indicatorQuery: "SELECT
                     CASE
                     	WHEN hiv_treatment_start='On ART before pregnancy' THEN 'Before_Pregnancy'
                     	WHEN hiv_treatment_start='1st or 2nd Trimester (0-27 weeks)' THEN 'First_Trimester'
                     	WHEN hiv_treatment_start='3rd Trimester (28+)' THEN 'Third_Trimester'
                     	WHEN hiv_treatment_start='During Labour' THEN 'Labour'
                     	ELSE 'Not_On_ART'
                     END treatment,count (*)
                     FROM maternity_outcome
                     WHERE '%s' = strftime('%Y-%m-%d', date)
                     GROUP BY hiv_treatment_start"
    isMultiResult: true
    expectedIndicators:
      - "ME_ART_Start_Before_Pregnancy"
      - "ME_ART_Start_First_Trimester"
      - "ME_ART_Start_Third_Trimester"
      - "ME_ART_Start_Labour"
      - "ME_ART_Not_On_ART"
    grouping: "maternity"

  - key: "ME_MAT_Complications"
    description: "Maternity obstetric complications"
    indicatorQuery: "SELECT * FROM (
                     SELECT
                     CASE
                        WHEN obstetric_complications LIKE '%None%' THEN 'None'
                     	WHEN obstetric_complications LIKE '%Antepartum haemorrhage%' THEN 'APH'
                     	WHEN obstetric_complications LIKE '%Postpartum Haemorhage%' THEN 'PPH'
                     	WHEN obstetric_complications LIKE '%Obstructed/Prolonged Labour%' THEN 'OPL'
                     	WHEN obstetric_complications LIKE '%Pre-eclampsia%' OR '%Eclampsia%' THEN 'ECL'
                     	WHEN obstetric_complications LIKE '%Sepsis%' THEN 'SEP'
                     	WHEN obstetric_complications LIKE '%Ruptured Uterus%' THEN 'RU'
                     	WHEN obstetric_complications LIKE '%Retained placenta%' THEN 'RP'
                     	WHEN obstetric_complications LIKE '%Fetal distress%' THEN 'FD'
                     	ELSE 'Null'
                      END complications,count (*)
                      FROM maternity_outcome
                      WHERE '%s' = strftime('%Y-%m-%d', date)
                      GROUP BY complications
                      UNION
                      SELECT
                      CASE
                      WHEN obstetric_complications LIKE '%Abnormal presentation%' THEN 'Other'
                      WHEN obstetric_complications LIKE '%Cord prolapse%' THEN 'Other'
                      WHEN obstetric_complications LIKE '%Haemorrhage%' THEN 'Other'
                      WHEN obstetric_complications LIKE '%Perineal tear (2nd, 3rd, or 4th degree)%' THEN 'Other'
                      WHEN obstetric_complications LIKE '%Placenta praevia%' THEN 'Other'
                      WHEN obstetric_complications LIKE '%Placental abruption%' THEN 'Other'
                      WHEN obstetric_complications LIKE '%Premature labour%' THEN 'Other'
                      WHEN obstetric_complications LIKE '%Severe Anaemia%' THEN 'Other'
                      WHEN obstetric_complications LIKE '%Symphysiotomy%' THEN 'Other'
                      WHEN obstetric_complications ='' THEN 'Other'
                      ELSE 'Null'
                      END complications,count (*)
                      FROM maternity_outcome
                      WHERE '%s' = strftime('%Y-%m-%d', date)
                      GROUP BY complications
                      ) a
                      WHERE complications !='Null'
                      GROUP BY a.complications"
    isMultiResult: true
    expectedIndicators:
      - "ME_MAT_Complications_APH"
      - "ME_MAT_Complications_PPH"
      - "ME_MAT_Complications_OPL"
      - "ME_MAT_Complications_ECL"
      - "ME_MAT_Complications_SEP"
      - "ME_MAT_Complications_RU"
      - "ME_MAT_Complications_RP"
      - "ME_MAT_Complications_FD"
      - "ME_MAT_Complications_Other"
      - "ME_MAT_Complications_None"
    grouping: "maternity"

  - key: "ME_MAT_Care"
    description: "Maternity obstetric care"
    indicatorQuery: "SELECT 'None',count(*) FROM maternity_outcome WHERE obstetric_care LIKE '%None%' AND '%s' = strftime('%Y-%m-%d', date)
                     UNION SELECT 'Ox',count(*) FROM maternity_outcome WHERE obstetric_care LIKE '%Oxytocin%' AND '%s' = strftime('%Y-%m-%d', date)
                     UNION SELECT 'AC',count(*) FROM maternity_outcome WHERE obstetric_care LIKE '%Anticonvulsants%' AND '%s' = strftime('%Y-%m-%d', date)
                     UNION SELECT 'Abx',count(*) FROM maternity_outcome WHERE obstetric_care LIKE '%Antibiotics%' AND '%s' = strftime('%Y-%m-%d', date)
                     UNION SELECT 'Acs',count(*) FROM maternity_outcome WHERE (obstetric_care LIKE '%Antenatal corticosteroids (Dose 1)%' OR obstetric_care LIKE '%Antenatal corticosteroids (Dose 2)%') AND '%s' = strftime('%Y-%m-%d', date)
                     UNION SELECT 'Tr',count(*) FROM maternity_outcome WHERE obstetric_care LIKE '%Blood transfusion%' AND '%s' = strftime('%Y-%m-%d', date)
                     UNION SELECT 'MRP',count(*) FROM maternity_outcome WHERE obstetric_care LIKE '%Manual removal of placenta (MRP)%' AND '%s' = strftime('%Y-%m-%d', date)
                     UNION SELECT 'NASG',count(*) FROM maternity_outcome WHERE obstetric_care LIKE '%Non-pneumatic anti shock garment (NASG)%' AND '%s' = strftime('%Y-%m-%d', date)
                     UNION SELECT 'ROPC',count(*) FROM maternity_outcome WHERE obstetric_care LIKE '%Removal of retained products of conception (RPOC)%' AND '%s' = strftime('%Y-%m-%d', date)
                     "

    isMultiResult: true
    expectedIndicators:
      - "ME_MAT_Care_None"
      - "ME_MAT_Care_Ox"
      - "ME_MAT_Care_AC"
      - "ME_MAT_Care_Abx"
      - "ME_MAT_Care_Acs"
      - "ME_MAT_Care_Tr"
      - "ME_MAT_Care_MRP"
      - "ME_MAT_Care_NASG"
      - "ME_MAT_Care_ROPC"
    grouping: "maternity"

  - key: "ME_MAT_Referred"
    description: "Maternity Referred out"
    indicatorQuery: "SELECT count(1)
                     FROM maternity_outcome
                     WHERE referred_out='Yes'
                     AND '%s' = strftime('%Y-%m-%d', date)"
    grouping: "maternity"

  - key: "ME_MAT_Delivery_Person"
    description: "Maternity staff conducting delivery"
    indicatorQuery: "SELECT
                     CASE
                     	WHEN delivery_person LIKE '%Medical Doctor (MD)%' THEN 'Skilled'
                     	WHEN delivery_person LIKE '%Clinical Officer (CO)%' THEN 'Skilled'
                     	WHEN delivery_person LIKE '%Medical Assistant (MA)%' THEN 'Skilled'
                     	WHEN delivery_person LIKE '%Nurse Midwife%' THEN 'Skilled'
                     	ELSE 'Not_skilled'
                     	END delivery_person,count (*)
                     FROM maternity_outcome
                     WHERE '%s' = strftime('%Y-%m-%d', date)
                     GROUP BY delivery_person"

    isMultiResult: true
    expectedIndicators:
      - "ME_MAT_Delivery_Person_Skilled"
      - "ME_MAT_Delivery_Person_Not_skilled"
    grouping: "maternity"

  - key: "ME_MAT_Vitamin_A"
    description: "Maternity vitamin A given"
    indicatorQuery: "SELECT count(1)
                     FROM maternity_outcome
                     WHERE vit_a='Yes'
                     AND '%s' = strftime('%Y-%m-%d', date)"
    grouping: "maternity"

  - key: "ME_MAT_Mother_Status"
    description: "Maternity Mother Status"
    indicatorQuery: "SELECT
                     CASE WHEN mother_status='Alive' THEN 'Alive'
                     	WHEN mother_status='Brought In Dead (BID)' THEN 'BID'
                     	WHEN mother_status='Died Before Discharge (DBD)' THEN 'DBD'
                     	ELSE 'Null'
                     END status,count(1)
                     FROM maternity_outcome
                     WHERE '%s' = strftime('%Y-%m-%d', date)
                     GROUP BY mother_status"
    isMultiResult: true
    expectedIndicators:
      - "ME_MAT_Mother_Status_Alive"
      - "ME_MAT_Mother_Status_BID"
      - "ME_MAT_Mother_Status_DBD"
    grouping: "maternity"

  - key: "ME_MAT_Babies"
    description: "Maternity Babies "
    indicatorQuery: "SELECT
                     CASE
                     	WHEN a.counter>1 THEN 'Multiple'
                     	ELSE 'Single'
                     	END birth,sum(a.counter)
                     FROM (SELECT count(*) counter from maternity_child
                     WHERE '%s' = strftime('%Y-%m-%d', event_date)
                     GROUP BY mother_base_entity_id) a
                     GROUP BY birth"
    isMultiResult: true
    expectedIndicators:
      - "ME_MAT_Babies_Multiple"
      - "ME_MAT_Babies_Single"
    grouping: "maternity"

  - key: "ME_MAT_Delivery_Place"
    description: "Maternity delivery place "
    indicatorQuery: "SELECT
                     CASE
                     	WHEN delivery_place='In Transit (TR)' THEN 'TR'
                     	WHEN delivery_place='This Facility' THEN 'Facility'
                     	WHEN delivery_place='Other Facility' THEN 'Other'
                     	WHEN delivery_place='Home/Traditional Birth Authority (TBA)' THEN 'Home'
                     	ELSE 'Null'
                      END delivery_place,count(*)
                      FROM maternity_outcome
                      WHERE '%s' = strftime('%Y-%m-%d', date)
                      GROUP BY delivery_place"
    isMultiResult: true
    expectedIndicators:
      - "ME_MAT_Delivery_Place_This"
      - "ME_MAT_Delivery_Place_TR"
      - "ME_MAT_Delivery_Place_Other"
      - "ME_MAT_Delivery_Place_Home"
    grouping: "maternity"

  - key: "ME_MAT_Delivery_Mode"
    description: "Maternity delivery mode "
    indicatorQuery: "SELECT
                     CASE
                     	WHEN delivery_mode='Spontaneous Vertex (SVD)' THEN 'SVD'
                     	WHEN delivery_mode='Vacuum Extraction (VE)' THEN 'VE'
                     	WHEN delivery_mode='Breech (BR)' THEN 'BR'
                     	WHEN delivery_mode='Caesarean Section (CS)' THEN 'CS'
                     	ELSE 'Null'
                     	END delivery_mode  ,count(*)
                     FROM maternity_outcome
                     WHERE '%s' = strftime('%Y-%m-%d', date)
                     GROUP BY delivery_mode"
    isMultiResult: true
    expectedIndicators:
      - "ME_MAT_Delivery_Mode_SVD"
      - "ME_MAT_Delivery_Mode_VE"
      - "ME_MAT_Delivery_Mode_BR"
      - "ME_MAT_Delivery_Mode_CS"
    grouping: "maternity"

  - key: "ME_MAT_Baby_Complications"
    description: "Maternity baby complications"
    indicatorQuery: "SELECT 'None',count(*) FROM maternity_child WHERE complications LIKE '%None%' AND '%s' = strftime('%Y-%m-%d', event_date)
                     UNION SELECT 'Prem',count(*) FROM maternity_child WHERE complications LIKE '%Premature%' AND '%s' = strftime('%Y-%m-%d', event_date)
                     UNION SELECT 'Asphy',count(*) FROM maternity_child WHERE complications LIKE '%Asphyxia%' AND '%s' = strftime('%Y-%m-%d', event_date)
                     UNION SELECT 'Sep',count(*) FROM maternity_child WHERE complications LIKE '%Sepsis%' AND '%s' = strftime('%Y-%m-%d', event_date)
                     UNION SELECT 'Defects',count(*) FROM maternity_child WHERE complications LIKE '%Birth defects%' AND '%s' = strftime('%Y-%m-%d', event_date)
                     UNION SELECT 'Other',count(*) FROM maternity_child WHERE (complications LIKE '%Other (Specify)%' OR complications ='') AND '%s' = strftime('%Y-%m-%d', event_date)
                     UNION SELECT 'Low_Weight',count(*) from maternity_child WHERE Weight<'2500' AND '%s' = strftime('%Y-%m-%d', event_date)"

    isMultiResult: true
    expectedIndicators:
      - "ME_MAT_Baby_Complications_None"
      - "ME_MAT_Baby_Complications_Prem"
      - "ME_MAT_Baby_Complications_Asphy"
      - "ME_MAT_Baby_Complications_Sep"
      - "ME_MAT_Baby_Complications_Defects"
      - "ME_MAT_Baby_Complications_Other"
      - "ME_MAT_Baby_Complications_Low_Weight"
    grouping: "maternity"

  - key: "ME_MAT_Baby_Care"
    description: "Maternity baby care"
    indicatorQuery: "SELECT 'None',count(*) FROM maternity_child WHERE care_mgt LIKE '%None%' AND '%s' = strftime('%Y-%m-%d', event_date)
                   UNION SELECT 'KMC',count(*) FROM maternity_child WHERE care_mgt LIKE '%Kangaroo Mother Care (KMC)%' AND '%s' = strftime('%Y-%m-%d', event_date)
                   UNION SELECT 'Antibiotics',count(*) FROM maternity_child WHERE care_mgt LIKE '%Antibiotics%' AND '%s' = strftime('%Y-%m-%d', event_date)
                   UNION SELECT 'Resuscitation',count(*) FROM maternity_child WHERE care_mgt LIKE '%Resuscitation%' AND '%s' = strftime('%Y-%m-%d', event_date)
                   UNION SELECT 'TEO',count(*) FROM maternity_child WHERE care_mgt LIKE '%Tetracycline Eye Ointment (TEO)%' AND '%s' = strftime('%Y-%m-%d', event_date)
                   UNION SELECT 'CHL',count(*) FROM maternity_child WHERE care_mgt LIKE '%Chlorhexidine (7.1%' AND '%s' = strftime('%Y-%m-%d', event_date)
                   UNION SELECT 'VitK',count(*) FROM maternity_child WHERE care_mgt LIKE '%Vitamin K%' AND '%s' = strftime('%Y-%m-%d', event_date)
                   UNION SELECT 'Other_Mgt',count(*) FROM maternity_child WHERE (care_mgt NOT LIKE '%Kangaroo Mother Care (KMC)%' OR
                        care_mgt NOT LIKE '%Antibiotics%' OR care_mgt NOT LIKE '%Recuscitation%' OR care_mgt IS NULL) AND '%s' = strftime('%Y-%m-%d', event_date)"
    isMultiResult: true
    expectedIndicators:
      - "ME_MAT_Baby_Care_None"
      - "ME_MAT_Baby_Care_KMC"
      - "ME_MAT_Baby_Care_Antibiotics"
      - "ME_MAT_Baby_Care_Resuscitation"
      - "ME_MAT_Baby_Care_TEO"
      - "ME_MAT_Baby_Care_CHL"
      - "ME_MAT_Baby_Care_VitK"
      - "ME_MAT_Baby_Care_Other_Mgt"
    grouping: "maternity"

  - key: "ME_MAT_BF_First_Hour"
    description: "Maternity bf first hour"
    indicatorQuery: "SELECT count(1)
                     FROM maternity_child
                     WHERE bf_first_hour ='Yes'
                     AND '%s' = strftime('%Y-%m-%d', event_date)"
    grouping: "maternity"

  - key: "ME_MAT_Stillbirth"
    description: "Maternity still birth"
    indicatorQuery: "SELECT stillbirth_condition,count(*) from maternity_child WHERE stillbirth_condition IN('Macerated','Fresh') and '%s' = strftime('%Y-%m-%d', event_date) GROUP BY stillbirth_condition"
    isMultiResult: true
    expectedIndicators:
      - "ME_MAT_Stillbirth_Macerated"
      - "ME_MAT_Stillbirth_Fresh"
    grouping: "maternity"

  - key: "ME_MAT_Neonatal_Death"
    description: "Maternity Neonatal deaths"
    indicatorQuery: "SELECT count(*) from maternity_child WHERE discharged_alive = 'No' and '%s' = strftime('%Y-%m-%d', event_date)"
    grouping: "maternity"

  - key: "ME_MAT_ITN_Given"
    description: "Maternity ITN Given"
    indicatorQuery: "SELECT count(*) from maternity_outcome WHERE itn_given = 'Yes' and '%s' = strftime('%Y-%m-%d', date)"
    grouping: "maternity"

  - key: "ME_MAT_Child_HIV_Status_Unknown"
    description: "Maternity Child HIV Status Unknown"
    indicatorQuery: "SELECT count(*) from maternity_child WHERE child_hiv_status = 'Unknown' and '%s' = strftime('%Y-%m-%d', event_date)"
    grouping: "maternity"

  - key: "ME_MAT_Child_HIV_Status_Not_Exposed"
    description: "Maternity Child HIV Status Not Exposed"
    indicatorQuery: "SELECT count(*) from maternity_child WHERE child_hiv_status <> 'Exposed' and '%s' = strftime('%Y-%m-%d', event_date)"
    grouping: "maternity"

  - key: "ME_MAT_Child_HIV_Status_Exposed"
    description: "Maternity Child HIV Status Exposed"
    indicatorQuery: "SELECT
                     		case
                     		when nvp_administration = 'No' THEN 'No_NVP'
                     		when nvp_administration = 'Yes' THEN 'NVP_Started'
                     		else 'Null'
                     		END nvp, count(1)
                     from maternity_child WHERE  child_hiv_status = 'Exposed'
                     and '%s' = strftime('%Y-%m-%d', event_date)"
    isMultiResult: true
    expectedIndicators:
      - "ME_MAT_Child_HIV_Status_Exposed_No_NVP"
      - "ME_MAT_Child_HIV_Status_Exposed_NVP_Started"
    grouping: "maternity"

  ##PNC
  - key: "ME_PNC_Total_Live_Birth"
    description: "Total Live Birth Deliveries"
    indicatorQuery: "SELECT COUNT(DISTINCT mother_base_entity_id) deliveries from pnc_baby
                     WHERE ('%s' = strftime('%Y-%m-%d', birth_record_date))"
    grouping: "pnc"

  - key: "ME_PNC_Woman_Complications"
    description: "PNC complications"
    indicatorQuery: "SELECT 'None' complication,count(*) FROM pnc_visit_info WHERE pnc_complications IS NULL AND pnc_complications_other IS NULL AND '%s' = strftime('%Y-%m-%d', DATETIME(ROUND(created_at / 1000), 'unixepoch'))
                     UNION SELECT 'Sepsis',count(*) FROM pnc_visit_info WHERE pnc_complications LIKE '%Sepsis%' AND '%s' = strftime('%Y-%m-%d', DATETIME(ROUND(created_at / 1000), 'unixepoch'))
                     UNION SELECT 'Anaemia',count(*) FROM pnc_visit_info WHERE pnc_complications LIKE '%Anaemia%' AND '%s' = strftime('%Y-%m-%d', DATETIME(ROUND(created_at / 1000), 'unixepoch'))
                     UNION SELECT 'PPH',count(*) FROM pnc_visit_info WHERE pnc_complications LIKE '%Postpartum haemorrhage%' AND '%s' = strftime('%Y-%m-%d', DATETIME(ROUND(created_at / 1000), 'unixepoch'))
                     UNION SELECT CASE WHEN pnc_complications LIKE '%Severe pre-eclampsia%' THEN 'SPE' WHEN pnc_complications LIKE '%Eclampsia%' THEN 'SPE' END,count(*) FROM pnc_visit_info WHERE '%s' = strftime('%Y-%m-%d', DATETIME(ROUND(created_at / 1000), 'unixepoch'))
                     UNION SELECT 'Eclampsia',count(*) FROM pnc_visit_info WHERE pnc_complications LIKE '%Eclampsia%' AND '%s' = strftime('%Y-%m-%d', DATETIME(ROUND(created_at / 1000), 'unixepoch'))
                     UNION SELECT 'BE',count(*) FROM pnc_visit_info WHERE pnc_complications LIKE '%Breast engorgement%' AND '%s' = strftime('%Y-%m-%d', DATETIME(ROUND(created_at / 1000), 'unixepoch'))
                     UNION SELECT 'Other',count(*) FROM pnc_visit_info WHERE pnc_complications_other IS NOT NULL AND '%s' = strftime('%Y-%m-%d', DATETIME(ROUND(created_at / 1000), 'unixepoch')) "
    isMultiResult: true
    expectedIndicators:
      - "ME_PNC_Woman_Complications_None"
      - "ME_PNC_Woman_Complications_Sepsis"
      - "ME_PNC_Woman_Complications_Anaemia" 
      - "ME_PNC_Woman_Complications_PPH" 
      - "ME_PNC_Woman_Complications_SPE"
      - "ME_PNC_Woman_Complications_BE"
      - "ME_PNC_Woman_Complications_Other"
    grouping: "pnc"

  - key: "ME_PNC_Checked_in"
    description: "Mother Checked in"
    indicatorQuery: "SELECT
                     CASE
                     WHEN pnc_visit_period < '2' THEN '2days'
                     WHEN pnc_visit_period < '7' THEN '7days'
                     WHEN pnc_visit_period < '42' THEN '42days'
                     ELSE 'MoreThan42'  END duration,count(*)
                     FROM pnc_visit_info
                     WHERE '%s' = strftime('%Y-%m-%d', DATETIME(ROUND(created_at / 1000), 'unixepoch'))"
    isMultiResult: true
    expectedIndicators:
      - "ME_PNC_Checked_in_2days"
      - "ME_PNC_Checked_in_7days"
      - "ME_PNC_Checked_in_42days"
    grouping: "pnc"
    
   - key: "ME_PNC_Checked_In_Twice_In_7days"
   description: "Mother Checked in 2x in 7 Days"
   indicatorQuery: "SELECT count(*) FROM (SELECT count(*) counter,created_at
                    FROM pnc_visit_info
                    WHERE pnc_visit_period < '7'
                    GROUP BY parent_base_entity_id) a
                    WHERE a.counter>=2
                    AND '%s' = strftime('%Y-%m-%d', DATETIME(ROUND(created_at / 1000), 'unixepoch'))"
   grouping: "pnc"

  - key: "ME_PNC_Vit_a"
    description: "Vitamin A doses"
    indicatorQuery: "SELECT
                     CASE WHEN vit_a='yes' THEN 'yes'
                     ELSE 'no' END vit,count(*) counter
                     FROM pnc_visit_info
                     WHERE '%s' = strftime('%Y-%m-%d', DATETIME(ROUND(created_at / 1000), 'unixepoch'))
                     GROUP BY vit"
    isMultiResult: true
    expectedIndicators:
     - "ME_PNC_Vit_a_yes"
     - "ME_PNC_Vit_a_no"
    grouping: "pnc"

  - key: "ME_PNC_fp_counsel"
    description: "Immediate Family Planning"
    indicatorQuery: "SELECT fp_counsel,count(*)
                     FROM pnc_visit_info
                     WHERE '%s' = strftime('%Y-%m-%d', DATETIME(ROUND(created_at / 1000), 'unixepoch'))
                     AND fp_counsel='yes'
                     GROUP BY fp_counsel"
    isMultiResult: true
    expectedIndicators:
      - "ME_PNC_fp_counsel_yes"
    grouping: "pnc"

  - key: "ME_PNC_fp_method"
    description: "Immediate Family Planning"
    indicatorQuery: "SELECT fp_method,count(*)
                     FROM pnc_visit_info
                     WHERE '%s' = strftime('%Y-%m-%d', DATETIME(ROUND(created_at / 1000), 'unixepoch'))
                     GROUP BY fp_method"
    isMultiResult: true
    expectedIndicators:
      - "ME_PNC_fp_method_bilateral_tubal_ligation"
      - "ME_PNC_fp_method_intrauterine_contraceptive_device"
    grouping: "pnc"

  - key: "ME_PNC_HIV"
    description: "HIV status"
    indicatorQuery: "SELECT
                     CASE WHEN hiv_status_current='positive' THEN 'Positive'
                     WHEN hiv_status_current='negative' THEN 'Negative'
                     ELSE 'ND' END hiv_status,count(*)
                     FROM pnc_registration_details
                     WHERE '%s' = strftime('%Y-%m-%d', DATETIME(ROUND(created_at / 1000), 'unixepoch'))
                     GROUP BY hiv_status_current"
    isMultiResult: true
    expectedIndicators:
      - "ME_PNC_HIV_Positive"
      - "ME_PNC_HIV_Negative"
      - "ME_PNC_HIV_ND"
    grouping: "pnc"

  - key: "ME_PNC_Baby_Complications"
    description: "HIV status"
    indicatorQuery: "SELECT 'Well',count(*) FROM pnc_baby WHERE complications LIKE '%NONE%'  AND '%s' = strftime('%Y-%m-%d', DATETIME(ROUND(created_at / 1000), 'unixepoch'))
                     UNION SELECT 'Asphyxia',count(*) FROM pnc_baby WHERE complications LIKE '%Asphyxia%' AND '%s' = strftime('%Y-%m-%d', DATETIME(ROUND(created_at / 1000), 'unixepoch'))
                     UNION SELECT 'LBW',count(*) FROM pnc_baby WHERE complications LIKE '%Premature%' OR birth_weight_entered<2500 AND '%s' = strftime('%Y-%m-%d', DATETIME(ROUND(created_at / 1000), 'unixepoch'))"
    isMultiResult: true
    expectedIndicators:
      - "ME_PNC_Baby_Complications_Well"
      - "ME_PNC_Baby_Complications_Asphyxia"
      - "ME_PNC_Baby_Complications_LBW"
    grouping: "pnc"

  - key: "ME_PNC_Baby_Vaccines"
    description: "Baby Vaccines"
    indicatorQuery: "SELECT a.name,count(1) counter from vaccines a
                     JOIN pnc_baby b
                     ON a.base_entity_id=b.base_entity_id
                     WHERE a.name IN ('opv_0','bcg')
                     AND '%s' = strftime('%Y-%m-%d', DATETIME(ROUND(a.created_at / 1000), 'unixepoch'))
                     GROUP BY a.base_entity_id,a.name"
    isMultiResult: true
    expectedIndicators:
      - "ME_PNC_Baby_Vaccines_opv_0"
      - "ME_PNC_Baby_Vaccines_bcg"
    grouping: "pnc"

  - key: "ME_PNC_Baby_Danger_Signs"
    description: "Baby danger signs"
    indicatorQuery: "SELECT 'None' sign,count(*) FROM pnc_visit_child_status a JOIN pnc_visit_info b ON a.parent_base_entity_id=b.base_entity_id WHERE baby_danger_signs LIKE '%none%' AND '%s' = strftime('%Y-%m-%d', DATETIME(ROUND(b.created_at / 1000), 'unixepoch'))
                     UNION SELECT 'Feed',count(*) FROM pnc_visit_child_status a JOIN pnc_visit_info b ON a.parent_base_entity_id=b.base_entity_id  WHERE baby_danger_signs LIKE '%not _able_to_feed%' AND '%s' = strftime('%Y-%m-%d', DATETIME(ROUND(b.created_at / 1000), 'unixepoch'))
                     UNION SELECT 'Fever',count(*) FROM pnc_visit_child_status a JOIN pnc_visit_info b ON a.parent_base_entity_id=b.base_entity_id  WHERE baby_danger_signs LIKE '%fever%' AND '%s' = strftime('%Y-%m-%d', DATETIME(ROUND(b.created_at / 1000), 'unixepoch'))
                     UNION SELECT 'Hypothermia',count(*) FROM pnc_visit_child_status a JOIN pnc_visit_info b ON a.parent_base_entity_id=b.base_entity_id  WHERE baby_danger_signs LIKE '%hypothermia%' AND '%s' = strftime('%Y-%m-%d', DATETIME(ROUND(b.created_at / 1000), 'unixepoch'))
                     UNION SELECT 'Convulsions',count(*) FROM pnc_visit_child_status a JOIN pnc_visit_info b ON a.parent_base_entity_id=b.base_entity_id  WHERE baby_danger_signs LIKE '%convulsions%' AND '%s' = strftime('%Y-%m-%d', DATETIME(ROUND(b.created_at / 1000), 'unixepoch'))
                     UNION SELECT 'Lethargic',count(*) FROM pnc_visit_child_status a JOIN pnc_visit_info b ON a.parent_base_entity_id=b.base_entity_id  WHERE baby_danger_signs LIKE '%lethargic%' AND '%s' = strftime('%Y-%m-%d', DATETIME(ROUND(b.created_at / 1000), 'unixepoch'))
                     UNION SELECT 'Chest',count(*) FROM pnc_visit_child_status a JOIN pnc_visit_info b ON a.parent_base_entity_id=b.base_entity_id  WHERE baby_danger_signs LIKE '%chest in-drawing%' AND '%s' = strftime('%Y-%m-%d', DATETIME(ROUND(b.created_at / 1000), 'unixepoch'))
                     UNION SELECT 'Breaths',count(*) FROM pnc_visit_child_status a JOIN pnc_visit_info b ON a.parent_base_entity_id=b.base_entity_id  WHERE baby_danger_signs LIKE '%fast_breathing%' AND '%s' = strftime('%Y-%m-%d', DATETIME(ROUND(b.created_at / 1000), 'unixepoch'))
                     UNION SELECT 'EyenCord',count(*) FROM pnc_visit_child_status a JOIN pnc_visit_info b ON a.parent_base_entity_id=b.base_entity_id  WHERE baby_danger_signs LIKE '%eye_discharge%' OR baby_danger_signs LIKE '%signs_of_cord_infection%' AND '%s' = strftime('%Y-%m-%d', DATETIME(ROUND(b.created_at / 1000), 'unixepoch'))
                     UNION SELECT 'Jaundice',count(*) FROM pnc_visit_child_status a JOIN pnc_visit_info b ON a.parent_base_entity_id=b.base_entity_id  WHERE baby_danger_signs LIKE '%jaundice%' AND '%s' = strftime('%Y-%m-%d', DATETIME(ROUND(b.created_at / 1000), 'unixepoch'))
                     "
    isMultiResult: true
    expectedIndicators:
      - "ME_PNC_Baby_Danger_Signs_None"
      - "ME_PNC_Baby_Danger_Signs_Feed"
      - "ME_PNC_Baby_Danger_Signs_Fever"
      - "ME_PNC_Baby_Danger_Signs_Hypothermia"
      - "ME_PNC_Baby_Danger_Signs_Convulsions"
      - "ME_PNC_Baby_Danger_Signs_Lethargic"
      - "ME_PNC_Baby_Danger_Signs_Chest"
      - "ME_PNC_Baby_Danger_Signs_Breaths"
      - "ME_PNC_Baby_Danger_Signs_EyenCord"
      - "ME_PNC_Baby_Danger_Signs_Jaundice"
    grouping: "pnc"

  - key: "ME_PNC_Baby_Care_Mgt"
    description: "Baby Care Management"
    indicatorQuery: "SELECT 'KMC' sign,count(*) FROM pnc_visit_child_status a JOIN pnc_visit_info b ON a.parent_base_entity_id=b.base_entity_id WHERE baby_care_mgt LIKE '%kangaroo%' AND '%s' = strftime('%Y-%m-%d', DATETIME(ROUND(b.created_at / 1000), 'unixepoch'))
                     UNION SELECT 'Vit_K',count(*) FROM pnc_visit_child_status a JOIN pnc_visit_info b ON a.parent_base_entity_id=b.base_entity_id  WHERE baby_danger_signs LIKE '%vitamin_k%' AND '%s' = strftime('%Y-%m-%d', DATETIME(ROUND(b.created_at / 1000), 'unixepoch'))
                     UNION SELECT 'TEO',count(*) FROM pnc_visit_child_status a JOIN pnc_visit_info b ON a.parent_base_entity_id=b.base_entity_id  WHERE baby_danger_signs LIKE '%tetracycline_eye_ointment%' AND '%s' = strftime('%Y-%m-%d', DATETIME(ROUND(b.created_at / 1000), 'unixepoch'))"
    isMultiResult: true
    expectedIndicators:
      - "ME_PNC_Baby_Care_Mgt_KMC"
      - "ME_PNC_Baby_Care_Mgt_Vit_K"
      - "ME_PNC_Baby_Care_Mgt_TEO"
    grouping: "pnc"

  - key: "ME_PNC_Baby_Nevirapine"
    description: "Total Live Birth Deliveries"
    indicatorQuery: "SELECT 'Nevirapine' treatment,count(*) counter FROM pnc_visit_child_status a JOIN pnc_visit_info b ON a.parent_base_entity_id=b.base_entity_id
                     WHERE baby_hiv_treatment LIKE '%nevirapine%'
                     AND '%s' = strftime('%Y-%m-%d', DATETIME(ROUND(b.created_at / 1000), 'unixepoch'))"
    grouping: "pnc"

  - key: "ME_PNC_ITN"
    description: "Total Live Birth Deliveries"
    indicatorQuery: "SELECT 'Nevirapine' treatment,count(*) counter FROM pnc_visit_child_status a JOIN pnc_visit_info b ON a.parent_base_entity_id=b.base_entity_id
                     WHERE baby_hiv_treatment LIKE '%nevirapine%'
                     AND '%s' = strftime('%Y-%m-%d', DATETIME(ROUND(b.created_at / 1000), 'unixepoch'))"
    grouping: "pnc"
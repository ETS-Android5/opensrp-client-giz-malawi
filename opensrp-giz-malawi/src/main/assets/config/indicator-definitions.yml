indicators:
  - key: "ME_Child_Total"
    description: "ME_Child_Total_label"
    indicatorQuery: "select count(*) from ec_client child WHERE '%s' = strftime('%Y-%m-%d', child.date)"
    grouping: "child"

  - key: "ME_PAB_Gender"
    description: "ME_PAB_Gender_label"
    indicatorQuery: "SELECT ec_client.gender, count(*)
                     FROM ec_child_details
                     JOIN ec_client ON ec_child_details.base_entity_id = ec_client.base_entity_id
                     JOIN ec_mother_details ON ec_child_details.relational_id = ec_mother_details.base_entity_id
                     WHERE '%s' = strftime('%Y-%m-%d', ec_client.date)
                     AND ec_client.dob >= date('now','-2 years')
                     AND ec_mother_details.protected_at_birth IS NOT NULL
                     group by ec_client.gender"
    isMultiResult: true
    expectedIndicators: ["ME_PAB_Gender_Female", "ME_PAB_Gender_Male"]
    grouping: "child"

  - key: "ME_PAB_Age"
    description: "ME_PAB_Age_label"
    indicatorQuery: "select
                     CASE
                     WHEN round(julianday('now') - julianday(ec_client.dob)) > 365.0 THEN 'Over_1'
                     WHEN round(julianday('now') - julianday(ec_client.dob)) < 365.0 THEN 'Under_1'
                     ELSE 'Null'
                     END age, count(*) counter
                     FROM ec_child_details
                     JOIN ec_client ON ec_child_details.base_entity_id = ec_client.base_entity_id
                     JOIN ec_mother_details ON ec_child_details.relational_id = ec_mother_details.base_entity_id
                     WHERE ec_mother_details.protected_at_birth IS NOT NULL AND '%s' = strftime('%Y-%m-%d', ec_client.date)
                     AND ec_client.dob >= date('now','-2 years')
                     group by age
                     UNION
                     Select 'Total', count(distinct ec_client.base_entity_id) from ec_child_details
                     JOIN ec_client ON ec_child_details.base_entity_id = ec_client.base_entity_id
                     JOIN ec_mother_details ON ec_child_details.relational_id = ec_mother_details.base_entity_id
                     WHERE  ec_mother_details.protected_at_birth IS NOT NULL AND  '%s' = strftime('%Y-%m-%d', ec_client.date) AND ec_client.dob >= date('now','-2 years')
                     ORDER BY counter"
    isMultiResult: true
    expectedIndicators: ["ME_PAB_Age_Over_1", "ME_PAB_Age_Under_1", "ME_PAB_Age_Total"]
    grouping: "child"

  - key: "ME_Vaccines_Gender"
    description: "ME_Vaccines_Gender_label"
    indicatorQuery: "SELECT vaccines.name, ec_client.gender, count(*) from vaccines
                      INNER JOIN ec_client
                      ON vaccines.base_entity_id = ec_client.base_entity_id
                      WHERE vaccines.date >= round((julianday(strftime('%Y-%m-%d', '%s', 'utc')) - 2440587.5) * 86400.0 * 1000)
                      AND vaccines.date < round((julianday(strftime('%Y-%m-%d', '%s', '+1 day', 'utc')) - 2440587.5) * 86400.0 * 1000)
                      AND ec_client.dob >= date('now', '-2 years')
                      GROUP BY vaccines.name, ec_client.gender"
    isMultiResult: true
    expectedIndicators:
      - "ME_Vaccines_Gender_bcg_Female"
      - "ME_Vaccines_Gender_bcg_Male"
      - "ME_Vaccines_Gender_hepb_Female"
      - "ME_Vaccines_Gender_hepb_Male"
      - "ME_Vaccines_Gender_opv_0_Male"
      - "ME_Vaccines_Gender_opv_0_Female"
      - "ME_Vaccines_Gender_opv_1_Male"
      - "ME_Vaccines_Gender_opv_1_Female"
      - "ME_Vaccines_Gender_opv_2_Male"
      - "ME_Vaccines_Gender_opv_2_Female"
      - "ME_Vaccines_Gender_opv_3_Male"
      - "ME_Vaccines_Gender_opv_3_Female"
      - "ME_Vaccines_Gender_penta_1_Male"
      - "ME_Vaccines_Gender_penta_1_Female"
      - "ME_Vaccines_Gender_penta_2_Male"
      - "ME_Vaccines_Gender_penta_2_Female"
      - "ME_Vaccines_Gender_penta_3_Male"
      - "ME_Vaccines_Gender_penta_3_Female"
      - "ME_Vaccines_Gender_pcv_1_Male"
      - "ME_Vaccines_Gender_pcv_1_Female"
      - "ME_Vaccines_Gender_pcv_2_Male"
      - "ME_Vaccines_Gender_pcv_2_Female"
      - "ME_Vaccines_Gender_pcv_3_Male"
      - "ME_Vaccines_Gender_pcv_3_Female"
      - "ME_Vaccines_Gender_rota_1_Male"
      - "ME_Vaccines_Gender_rota_1_Female"
      - "ME_Vaccines_Gender_rota_2_Male"
      - "ME_Vaccines_Gender_rota_2_Female"
      - "ME_Vaccines_Gender_mv_1_Male"
      - "ME_Vaccines_Gender_mv_1_Female"
      - "ME_Vaccines_Gender_mv_2_Male"
      - "ME_Vaccines_Gender_mv_2_Female"
      - "ME_Vaccines_Gender_mv_3_Male"
      - "ME_Vaccines_Gender_mv_3_Female"
      - "ME_Vaccines_Gender_mv_4_Male"
      - "ME_Vaccines_Gender_mv_4_Female"
      - "ME_Vaccines_Gender_measles_1_/_mr_1_Male"
      - "ME_Vaccines_Gender_measles_1_/_mr_1_Female"
      - "ME_Vaccines_Gender_measles_2_/_mr_2_Male"
      - "ME_Vaccines_Gender_measles_2_/_mr_2_Female"
      - "ME_Vaccines_Gender_ipv_Male"
      - "ME_Vaccines_Gender_ipv_Female"
    grouping: "child"

  - key: "ME_Vaccines_Age"
    description: "ME_Vaccines_Age_label"
    indicatorQuery: "SELECT vaccines.name,
                       CASE
                          WHEN round(julianday('now')-julianday(ec_client.dob)) > 365.0 THEN 'Over_1'
                          WHEN round(julianday('now')-julianday(ec_client.dob)) < 365.0 THEN 'Under_1'
                          ELSE 'Null'
                          END age, count(*) counter
                      FROM vaccines
                      INNER JOIN ec_client
                      ON vaccines.base_entity_id = ec_client.base_entity_id
                      WHERE vaccines.date >= round((julianday(strftime('%Y-%m-%d', '%s', 'utc')) - 2440587.5) * 86400.0 * 1000)
                      AND vaccines.date < round((julianday(strftime('%Y-%m-%d', '%s', '+1 day', 'utc')) - 2440587.5) * 86400.0 * 1000)
                      AND ec_client.dob >= date('now', '-2 years')
                      GROUP BY vaccines.name, age"
    isMultiResult: true
    expectedIndicators:
      - "ME_Vaccines_Age_bcg_Over_1"
      - "ME_Vaccines_Age_bcg_Under_1"
      - "ME_Vaccines_Age_opv_0_Over_1"
      - "ME_Vaccines_Age_opv_0_Under_1"
      - "ME_Vaccines_Age_opv_1_Over_1"
      - "ME_Vaccines_Age_opv_1_Under_1"
      - "ME_Vaccines_Age_opv_2_Over_1"
      - "ME_Vaccines_Age_opv_2_Under_1"
      - "ME_Vaccines_Age_opv_3_Over_1"
      - "ME_Vaccines_Age_opv_3_Under_1"
      - "ME_Vaccines_Age_penta_1_Over_1"
      - "ME_Vaccines_Age_penta_1_Under_1"
      - "ME_Vaccines_Age_penta_2_Over_1"
      - "ME_Vaccines_Age_penta_2_Under_1"
      - "ME_Vaccines_Age_penta_3_Over_1"
      - "ME_Vaccines_Age_penta_3_Under_1"
      - "ME_Vaccines_Age_pcv_1_Over_1"
      - "ME_Vaccines_Age_pcv_1_Under_1"
      - "ME_Vaccines_Age_pcv_2_Over_1"
      - "ME_Vaccines_Age_pcv_2_Under_1"
      - "ME_Vaccines_Age_rota_1_Over_1"
      - "ME_Vaccines_Age_rota_1_Under_1"
      - "ME_Vaccines_Age_rota_2_Over_1"
      - "ME_Vaccines_Age_rota_2_Under_1"
      - "ME_Vaccines_Age_mv_1_Over_1"
      - "ME_Vaccines_Age_mv_1_Under_1"
      - "ME_Vaccines_Age_mv_2_Over_1"
      - "ME_Vaccines_Age_mv_2_Under_1"
      - "ME_Vaccines_Age_mv_3_Over_1"
      - "ME_Vaccines_Age_mv_3_Under_1"
      - "ME_Vaccines_Age_measles_1_/_mr_1_Over_1"
      - "ME_Vaccines_Age_measles_1_/_mr_1_Under_1"
      - "ME_Vaccines_Age_ipv_Over_1"
      - "ME_Vaccines_Age_ipv_Under_1"
    grouping: "child"

  - key: "ME_Vaccines_Under2"
    description: "ME_Vaccines_Under2_label"
    indicatorQuery: "SELECT vaccines.name, count(*) counter
                     FROM vaccines
                     INNER JOIN ec_client
                     ON vaccines.base_entity_id = ec_client.base_entity_id
                     WHERE vaccines.date >= round((julianday(strftime('%Y-%m-%d', '%s', 'utc')) - 2440587.5) * 86400.0 * 1000)
                     AND vaccines.date < round((julianday(strftime('%Y-%m-%d', '%s', '+1 day', 'utc')) - 2440587.5) * 86400.0 * 1000)
                     AND ec_client.dob >= date('now', '-2 years')
                     GROUP BY vaccines.name"
    isMultiResult: true
    expectedIndicators:
      - "ME_Vaccines_Under2_bcg"
      - "ME_Vaccines_Under2_opv_0"
      - "ME_Vaccines_Under2_opv_1"
      - "ME_Vaccines_Under2_opv_2"
      - "ME_Vaccines_Under2_opv_3"
      - "ME_Vaccines_Under2_penta_1"
      - "ME_Vaccines_Under2_penta_2"
      - "ME_Vaccines_Under2_penta_3"
      - "ME_Vaccines_Under2_pcv_1"
      - "ME_Vaccines_Under2_pcv_2"
      - "ME_Vaccines_Under2_rota_1"
      - "ME_Vaccines_Under2_rota_2"
      - "ME_Vaccines_Under2_mv_1"
      - "ME_Vaccines_Under2_mv_2"
      - "ME_Vaccines_Under2_mv_3"
      - "ME_Vaccines_Under2_measles_1_/_mr_1"
    grouping: "child"

  - key: "ME_Child_HIV_Status_Under2_Gender"
    description: "ME_Child_HIV_Status_Under2_Gender_label"
    indicatorQuery: "SELECT case
                     WHEN ec_child_details.child_hiv_status IS NULL THEN 'HIV Unknown'
                     ELSE 'HIV ' || ec_child_details.child_hiv_status
                     END as hiv_status, count(*) counter
                     FROM ec_child_details
                     JOIN ec_client ON ec_child_details.base_entity_id = ec_client.base_entity_id
                     WHERE '%s' = strftime('%Y-%m-%d', ec_client.date)
                     AND ec_client.dob >= date('now', '-2 years')
                     group by ec_child_details.child_hiv_status,ec_client.gender"
    isMultiResult: true
    expectedIndicators:
      - "ME_Child_HIV_Status_Under2_Gender_HIV Exposed_Female"
      - "ME_Child_HIV_Status_Under2_Gender_HIV Exposed_Male"
      - "ME_Child_HIV_Status_Under2_Gender_HIV Negative_Female"
      - "ME_Child_HIV_Status_Under2_Gender_HIV Negative_Male"
      - "ME_Child_HIV_Status_Under2_Gender_HIV Positive_Female"
      - "ME_Child_HIV_Status_Under2_Gender_HIV Positive_Male"
      - "ME_Child_HIV_Status_Under2_Gender_HIV Unknown_Female"
      - "ME_Child_HIV_Status_Under2_Gender_HIV Unknown_Male"
    grouping: "child"

  - key: "ME_Child_HIV_Status_Over2_Gender"
    description: "ME_Child_HIV_Status_Over2_Gender_label"
    indicatorQuery: "SELECT case
                     WHEN ec_child_details.child_hiv_status IS NULL THEN 'HIV Unknown'
                     ELSE 'HIV ' || ec_child_details.child_hiv_status
                     END as hiv_status, count(*) counter
                     FROM ec_child_details
                     JOIN ec_client ON ec_child_details.base_entity_id = ec_client.base_entity_id
                     WHERE '%s' = strftime('%Y-%m-%d', ec_client.date)
                     AND ec_client.dob < date('now', '-2 years')
                     AND ec_client.dob >= date('now', '-5 years')
                     group by ec_child_details.child_hiv_status, ec_client.gender"
    isMultiResult: true
    expectedIndicators:
      - "ME_Child_HIV_Status_Over2_Gender_HIV Exposed_Female"
      - "ME_Child_HIV_Status_Over2_Gender_HIV Exposed_Male"
      - "ME_Child_HIV_Status_Over2_Gender_HIV Negative_Female"
      - "ME_Child_HIV_Status_Over2_Gender_HIV Negative_Male"
      - "ME_Child_HIV_Status_Over2_Gender_HIV Positive_Female"
      - "ME_Child_HIV_Status_Over2_Gender_HIV Positive_Male"
      - "ME_Child_HIV_Status_Over2_Gender_HIV Unknown_Female"
      - "ME_Child_HIV_Status_Over2_Gender_HIV Unknown_Male"
    grouping: "child"

  - key: "ME_Child_HIV_Treatment_Under2_Gender"
    description: "Me_Child_HIV_Treatment_Under2_Gender_label"
    indicatorQuery: "SELECT ec_child_details.child_treatment, ec_client.gender, count(*) counter
                     FROM ec_child_details
                     JOIN ec_client ON ec_child_details.base_entity_id = ec_client.base_entity_id
                     WHERE '%s' = strftime('%Y-%m-%d', ec_client.date)
                     AND ec_client.dob >= date('now', '-2 years')
                     AND ec_child_details.child_treatment IS NOT NULL
                     GROUP BY ec_child_details.child_treatment, ec_client.gender"
    isMultiResult: true
    expectedIndicators:
      - "ME_Child_HIV_Treatment_Under2_Gender_ART_Female"
      - "ME_Child_HIV_Treatment_Under2_Gender_ART_Male"
      - "ME_Child_HIV_Treatment_Under2_Gender_CPT_Female"
      - "ME_Child_HIV_Treatment_Under2_Gender_CPT_Male"
    grouping: "child"

  - key: "ME_Child_HIV_Treatment_Over2_Gender"
    description: "ME_Child_HIV_Treatment_Over2_Gender_label"
    indicatorQuery: "SELECT ec_child_details.child_treatment, ec_client.gender, count(*) counter
                     FROM ec_child_details
                     JOIN ec_client ON ec_child_details.base_entity_id = ec_client.base_entity_id
                     WHERE '%s' = strftime('%Y-%m-%d', ec_client.date)
                     AND ec_client.dob < date('now', '-2 years')
                     AND ec_client.dob >= date('now', '-5 years')
                     AND ec_child_details.child_treatment IS NOT NULL
                     GROUP BY ec_child_details.child_treatment, ec_client.gender"
    isMultiResult: true
    expectedIndicators:
      - "ME_Child_HIV_Treatment_Over2_Gender_ART_Female"
      - "ME_Child_HIV_Treatment_Over2_Gender_ART_Male"
      - "ME_Child_HIV_Treatment_Over2_Gender_CPT_Female"
      - "ME_Child_HIV_Treatment_Over2_Gender_CPT_Male"
    grouping: "child"

  - key: "ME_Child_HIV_Status_Over2"
    description: "ME_Child_HIV_Status_Over2_label"
    indicatorQuery: "SELECT case
                     WHEN ec_child_details.child_hiv_status IS NULL THEN 'HIV Unknown'
                     ELSE 'HIV ' || ec_child_details.child_hiv_status
                     END as hiv_status, count(*) counter
                     FROM ec_child_details
                     JOIN ec_client ON ec_child_details.base_entity_id = ec_client.base_entity_id
                     WHERE '%s' = strftime('%Y-%m-%d', ec_client.date)
                     AND ec_client.dob < date('now', '-2 years')
                     AND ec_client.dob >= date('now', '-5 years')
                     group by ec_child_details.child_hiv_status"
    isMultiResult: true
    expectedIndicators:
      - "ME_Child_HIV_Status_Over2_HIV Unknown"
      - "ME_Child_HIV_Status_Over2_HIV Positive"
      - "ME_Child_HIV_Status_Over2_HIV Exposed"
      - "ME_Child_HIV_Status_Over2_HIV Negative"
    grouping: "child"

  - key: "ME_Child_HIV_Status_Under2"
    description: "ME_Child_HIV_Status_Under2_label"
    indicatorQuery: "SELECT case
                     WHEN ec_child_details.child_hiv_status IS NULL THEN 'HIV Unknown'
                     ELSE 'HIV ' || ec_child_details.child_hiv_status
                     END as hiv_status, count(*) counter
                     FROM ec_child_details
                     JOIN ec_client ON ec_child_details.base_entity_id = ec_client.base_entity_id
                     WHERE '%s' = strftime('%Y-%m-%d', ec_client.date)
                     AND ec_client.dob >= date('now', '-2 years')
                     group by ec_child_details.child_hiv_status"
    isMultiResult: true
    expectedIndicators:
      - "ME_Child_HIV_Status_Under2_HIV Unknown"
      - "ME_Child_HIV_Status_Under2_HIV Positive"
      - "ME_Child_HIV_Status_Under2_HIV Exposed"
      - "ME_Child_HIV_Status_Under2_HIV Negative"
    grouping: "child"

  - key: "ME_Child_HIV_Treatment_Over2"
    description: "ME_Child_HIV_Treatment_Over2_label"
    indicatorQuery: "SELECT ec_child_details.child_treatment, count(*) counter FROM ec_child_details
                     JOIN ec_client ON ec_child_details.base_entity_id = ec_client.base_entity_id
                     WHERE '%s' = strftime('%Y-%m-%d', ec_client.date)
                     AND ec_client.dob < date('now', '-2 years')
                     AND ec_client.dob >= date('now', '-5 years')
                     AND ec_child_details.child_treatment IS NOT NULL
                     GROUP BY ec_child_details.child_treatment"
    isMultiResult: true
    expectedIndicators:
      - "ME_Child_HIV_Treatment_Over2_ART"
      - "ME_Child_HIV_Treatment_Over2_CPT"
    grouping: "child"

  - key: "ME_Child_HIV_Treatment_Under2"
    description: "ME_Child_HIV_Treatment_Under2_label"
    indicatorQuery: "SELECT ec_child_details.child_treatment, count(*) counter FROM ec_child_details
                     JOIN ec_client ON ec_child_details.base_entity_id = ec_client.base_entity_id
                     WHERE '%s' = strftime('%Y-%m-%d', ec_client.date)
                     AND ec_client.dob >= date('now', '-2 years')
                     AND ec_child_details.child_treatment IS NOT NULL
                     GROUP BY ec_child_details.child_treatment"
    isMultiResult: true
    expectedIndicators:
      - "ME_Child_HIV_Treatment_Under2_ART"
      - "ME_Child_HIV_Treatment_Under2_CPT"
    grouping: "child"

  - key: "ME_Weight_Over2"
    description: "ME_Weight_Over2_label"
    indicatorQuery: "SELECT
                     CASE
                     WHEN weights.z_score > -2 AND weights.z_score < 2 THEN 'Normal'
                     WHEN weights.z_score <= -2 THEN 'Underweight'
                     WHEN weights.z_score >= 2 THEN 'Overweight'
                     ELSE 'Severe'
                     END AS waz_score, count(*)
                      FROM weights
                     INNER JOIN ec_client
                     ON weights.base_entity_id = ec_client.base_entity_id
                      WHERE weights.date >= round((julianday(strftime('%Y-%m-%d', '%s')) - 2440587.5) * 86400.0 * 1000)
                      AND weights.date < round((julianday(strftime('%Y-%m-%d', '%s', '+1 day')) - 2440587.5) * 86400.0 * 1000)
                      AND ec_client.dob < date('now', '-2 years')
                     AND ec_client.dob >= date('now', '-5 years')
                     AND weights.z_score <= 3
                     AND weights.z_score >= -3
                     GROUP  BY waz_score"
    expectedIndicators:
      - "ME_Weight_Over2_Normal"
      - "ME_Weight_Over2_Overweight"
      - "ME_Weight_Over2_Underweight"
    grouping: "child"

  - key: "ME_Weight_Over2_Gender"
    description: "ME_Weight_Over2_Gender_label"
    indicatorQuery: "SELECT
                      CASE
                      WHEN weights.z_score > -2 AND weights.z_score < 2 THEN 'Normal'
                      WHEN weights.z_score <= -2 THEN 'Underweight'
                      WHEN weights.z_score >= 2 THEN 'Overweight'
                      ELSE 'Severe'
                      END AS waz_score, ec_client.gender, count(*)
                       FROM weights
                      INNER JOIN ec_client
                      ON weights.base_entity_id = ec_client.base_entity_id
                       WHERE weights.date >= round((julianday(strftime('%Y-%m-%d', '%s')) - 2440587.5) * 86400.0 * 1000)
                       AND weights.date < round((julianday(strftime('%Y-%m-%d', '%s', '+1 day')) - 2440587.5) * 86400.0 * 1000)
                       AND ec_client.dob < date('now', '-2 years')
                      AND ec_client.dob >= date('now', '-5 years')
                      AND weights.z_score <= 3
                      AND weights.z_score >= -3
                      GROUP  BY waz_score, ec_client.gender"
    expectedIndicators:
      - "ME_Weight_Over2_Gender_Normal_Female"
      - "ME_Weight_Over2_Gender_Normal_Male"
      - "ME_Weight_Over2_Gender_Overweight_Female"
      - "ME_Weight_Over2_Gender_Overweight_Male"
      - "ME_Weight_Over2_Gender_Underweight_Female"
      - "ME_Weight_Over2_Gender_Underweight_Male"
    grouping: "child"

  - key: "ME_Weight_Under2_Age"
    description: "ME_Weight_Under2_Age_label"
    indicatorQuery: "SELECT
                     CASE
                     WHEN weights.z_score > -2 AND weights.z_score < 2 THEN 'Normal'
                     WHEN weights.z_score <= -2 THEN 'Underweight'
                     WHEN weights.z_score >= 2 THEN 'Overweight'
                     ELSE 'Severe'
                     END AS waz_score,
                     CASE
                     WHEN round(julianday('now') - julianday(ec_client.dob)) > 365.0 THEN 'Over_1'
                     WHEN round(julianday('now') - julianday(ec_client.dob)) < 365.0 THEN 'Under_1'
                     ELSE 'Null'
                     END age, count(*)
                     FROM weights
                     INNER JOIN ec_client
                     ON weights.base_entity_id = ec_client.base_entity_id
                     WHERE weights.date >= round((julianday(strftime('%Y-%m-%d', '%s')) - 2440587.5) * 86400.0 * 1000)
                     AND weights.date < round((julianday(strftime('%Y-%m-%d', '%s', '+1 day')) - 2440587.5) * 86400.0 * 1000)
                     AND ec_client.dob >= date('now', '-2 years')
                     AND weights.z_score <= 3
                     AND weights.z_score >= -3
                     GROUP  BY waz_score, age"
    expectedIndicators:
      - "ME_Weight_Under2_Age_Normal_Under_1"
      - "ME_Weight_Under2_Age_Normal_Over_1"
      - "ME_Weight_Under2_Age_Overweight_Under_1"
      - "ME_Weight_Under2_Age_Overweight_Over_1"
      - "ME_Weight_Under2_Age_Underweight_Under_1"
    grouping: "child"

  - key: "ME_Weight_Under2_Age_Gender"
    description: "ME_Weight_Under2_Age_Gender_label"
    indicatorQuery: "SELECT
                      CASE
                      WHEN weights.z_score > -2 AND weights.z_score < 2 THEN 'Normal'
                      WHEN weights.z_score <= -2 THEN 'Underweight'
                      WHEN weights.z_score >= 2 THEN 'Overweight'
                      ELSE 'Severe'
                      END AS waz_score,
                      CASE
                      WHEN round(julianday('now') - julianday(ec_client.dob)) > 365.0 THEN 'Over_1'
                      WHEN round(julianday('now') - julianday(ec_client.dob)) < 365.0 THEN 'Under_1'
                      ELSE 'Null'
                      END age, ec_client.gender, count(*)
                      FROM weights
                      INNER JOIN ec_client
                      ON weights.base_entity_id = ec_client.base_entity_id
                      WHERE weights.date >= round((julianday(strftime('%Y-%m-%d', '%s')) - 2440587.5) * 86400.0 * 1000)
                      AND weights.date < round((julianday(strftime('%Y-%m-%d', '%s', '+1 day')) - 2440587.5) * 86400.0 * 1000)
                      AND ec_client.dob >= date('now', '-2 years')
                      AND weights.z_score <= 3
                      AND weights.z_score >= -3
                      GROUP  BY waz_score, age, ec_client.gender"
    expectedIndicators:
      - "ME_Weight_Under2_Age_Gender_Normal_Over_1_Female"
      - "ME_Weight_Under2_Age_Gender_Normal_Over_1_Male"
      - "ME_Weight_Under2_Age_Gender_Normal_Under_1_Female"
      - "ME_Weight_Under2_Age_Gender_Normal_Under_1_Male"
      - "ME_Weight_Under2_Age_Gender_Overweight_Over_1_Female"
      - "ME_Weight_Under2_Age_Gender_Overweight_Over_1_Male"
      - "ME_Weight_Under2_Age_Gender_Overweight_Under_1_Female"
      - "ME_Weight_Under2_Age_Gender_Overweight_Under_1_Male"
      - "ME_Weight_Under2_Age_Gender_Underweight_Over_1_Female"
      - "ME_Weight_Under2_Age_Gender_Underweight_Over_1_Male"
      - "ME_Weight_Under2_Age_Gender_Underweight_Under_1_Female"
      - "ME_Weight_Under2_Age_Gender_Underweight_Under_1_Male"
    grouping: "child"

  - key: "ME_Height_Over2_Gender"
    description: "ME_Height_Over2_Gender_label"
    indicatorQuery: "SELECT
                  CASE
                  WHEN heights.z_score > 3 OR heights.z_score < -3 THEN 'Severe'
                  WHEN heights.z_score > -2 AND heights.z_score < 2 THEN 'Normal'
                  WHEN heights.z_score <= -2 || heights.z_score >= 2 THEN 'Stunted'
                  ELSE ''
                  END AS haz_score, ec_client.gender, count(*)
                   FROM heights
                  INNER JOIN ec_client
                  ON heights.base_entity_id = ec_client.base_entity_id
                   WHERE heights.date >= round((julianday(strftime('%Y-%m-%d', '%s')) - 2440587.5) * 86400.0 * 1000)
                   AND heights.date < round((julianday(strftime('%Y-%m-%d', '%s', '+1 day')) - 2440587.5) * 86400.0 * 1000)
                   AND ec_client.dob < date('now', '-2 years')
                  AND ec_client.dob >= date('now', '-5 years')
                  GROUP  BY haz_score, ec_client.gender"
    expectedIndicators:
      - "ME_Height_Over2_Gender_Normal_Female"
      - "ME_Height_Over2_Gender_Normal_Male"
      - "ME_Height_Over2_Gender_Stunted_Female"
      - "ME_Height_Over2_Gender_Stunted_Male"
    grouping: "child"

  - key: "ME_Height_Under2_Age"
    description: "ME_Height_Under2_Age_label"
    indicatorQuery: "SELECT
                      CASE
                      WHEN heights.z_score > -2 AND heights.z_score < 2 THEN 'Normal'
                      WHEN heights.z_score < -3 OR heights.z_score > 3 THEN 'Severe'
                      WHEN heights.z_score <= -2 OR heights.z_score >= 2 THEN 'Stunted'
                      ELSE ''
                      END AS haz_score,
                      CASE
                      WHEN round(julianday('now') - julianday(ec_client.dob)) > 365.0 THEN 'Over_1'
                      WHEN round(julianday('now') - julianday(ec_client.dob)) < 365.0 THEN 'Under_1'
                      ELSE 'Null'
                      END age, count(*)
                      FROM heights
                      INNER JOIN ec_client
                      ON heights.base_entity_id = ec_client.base_entity_id
                      WHERE heights.date >= round((julianday(strftime('%Y-%m-%d', '%s')) - 2440587.5) * 86400.0 * 1000)
                      AND heights.date < round((julianday(strftime('%Y-%m-%d', '%s', '+1 day')) - 2440587.5) * 86400.0 * 1000)
                      AND ec_client.dob >= date('now', '-2 years')
                      GROUP  BY haz_score, age"
    expectedIndicators:
      - "ME_Height_Under2_Age_Normal_Under_1"
      - "ME_Height_Under2_Age_Normal_Over_1"
      - "ME_Height_Under2_Age_Severe_Under_1"
      - "ME_Height_Under2_Age_Severe_Over_1"
      - "ME_Height_Under2_Age_Stunted_Under_1"
    grouping: "child"

  - key: "ME_Height_Under2_Age_Gender"
    description: "ME_Height_Under2_Age_Gender_label"
    indicatorQuery: "SELECT
                     CASE
                     WHEN heights.z_score > -2 AND heights.z_score < 2 THEN 'Normal'
                     WHEN heights.z_score < -3 OR heights.z_score > 3 THEN 'Severe'
                     WHEN heights.z_score <= -2 OR heights.z_score >= 2 THEN 'Stunted'
                     ELSE ''
                     END AS haz_score,
                     CASE
                     WHEN round(julianday('now') - julianday(ec_client.dob)) >= 365.0 THEN 'Over_1'
                     WHEN round(julianday('now') - julianday(ec_client.dob)) < 365.0 THEN 'Under_1'
                     ELSE 'Null'
                     END age, ec_client.gender, count(*)
                     FROM heights
                     INNER JOIN ec_client
                     ON heights.base_entity_id = ec_client.base_entity_id
                     WHERE heights.date >= round((julianday(strftime('%Y-%m-%d', '%s')) - 2440587.5) * 86400.0 * 1000)
                     AND heights.date < round((julianday(strftime('%Y-%m-%d', '%s', '+1 day')) - 2440587.5) * 86400.0 * 1000)
                     AND ec_client.dob >= date('now', '-2 years')
                     GROUP  BY haz_score, age, ec_client.gender"
    expectedIndicators:
      - "ME_Height_Under2_Age_Gender_Normal_Over_1_Female"
      - "ME_Height_Under2_Age_Gender_Normal_Over_1_Male"
      - "ME_Height_Under2_Age_Gender_Normal_Under_1_Female"
      - "ME_Height_Under2_Age_Gender_Normal_Under_1_Male"
      - "ME_Height_Under2_Age_Gender_Severe_Over_1_Female"
      - "ME_Height_Under2_Age_Gender_Severe_Over_1_Male"
      - "ME_Height_Under2_Age_Gender_Stunted_Under_1_Female"
      - "ME_Height_Under2_Age_Gender_Stunted_Under_1_Male"
    grouping: "child"

  - key: "ME_Fully_Immunized"
    description: "Fully Immunized"
    indicatorQuery: "select count(1) from (select vaccines.base_entity_id from vaccines
                     join ec_client on vaccines.base_entity_id = ec_client.base_entity_id where '%s' = strftime('%Y-%m-%d', ec_client.date)
                     group by vaccines.base_entity_id
                     having sum(case when name = 'bcg' then 1 else 0 end) > 0
                     and sum(case when name = 'ipv' then 1 else 0 end) > 0
                     and sum(case when name = 'mr_1' then 1 else 0 end) > 0
                     and sum(case when name = 'opv_1' then 1 else 0 end) > 0
                     and sum(case when name = 'opv_3' then 1 else 0 end) > 0
                     and sum(case when name = 'pcv_1' then 1 else 0 end) > 0
                     and sum(case when name = 'penta_1' then 1 else 0 end) > 0
                     and sum(case when name = 'penta_2' then 1 else 0 end) > 0
                     and sum(case when name = 'penta_3' then 1 else 0 end) > 0
                     and sum(case when name = 'rota_1' then 1 else 0 end) > 0)"
    grouping: "child"


  # ANC Indicators
  - key: "ME_Number_Of_Women_Registered"
    description: "Number of women registered"
    indicatorQuery: "select count(1) from (select base_entity_id from previous_contact
                     where previous_contact.contact_no = '1' group by base_entity_id
                     having sum(case when key = 'contact_date' and value = strftime('%Y-%m-%d', '%s', 'localtime') then 1 else 0 end) > 0)"
    grouping: "anc"

  - key: "ME_Pregnancy_Tests_Done_In_The_First_Trimester"
    description: "Pregnancy tests Done In the first trimester"
    indicatorQuery: "select count(1) from (select base_entity_id from previous_contact
                     where previous_contact.contact_no = '1' group by base_entity_id
                     having sum(case when key = 'pregnancy_test_first_trimester' and value = 'yes' then 1 else 0 end) > 0
                     and sum(case when key = 'contact_date' and value = strftime('%Y-%m-%d', '%s', 'localtime') then 1 else 0 end) > 0)"
    grouping: "anc"

  - key: "ME_Pregnancy_Tests_Done_After_The_First_Trimester"
    description: "Pregnancy tests Done AFTER the first trimester"
    indicatorQuery: "select count(1) from (select base_entity_id from previous_contact
                   where previous_contact.contact_no = '1' group by base_entity_id
                   having sum(case when key = 'pregnancy_test_first_trimester' and value = 'no' then 1 else 0 end) > 0
                   and sum(case when key = 'contact_date' and value = strftime('%Y-%m-%d', '%s', 'localtime') then 1 else 0 end) > 0)"
    grouping: "anc"

  - key: "ME_Week_Of_First_ANC_Visit_0_12_weeks"
    description: "Week of First ANC Visit (0-12 weeks)"
    indicatorQuery: "select count(1) from (select base_entity_id from previous_contact
                   where previous_contact.contact_no = '1' group by base_entity_id
                   having sum(case when key = 'gest_age_openmrs' and cast(value as integer) <= 12 then 1 else 0 end) > 0
                   and sum(case when key = 'contact_date' and value = strftime('%Y-%m-%d', '%s', 'localtime') then 1 else 0 end) > 0)"
    grouping: "anc"

  - key: "ME_Week_Of_First_ANC_Visit_13_plus_weeks"
    description: "Week of First ANC Visit (13+ weeks)"
    indicatorQuery: "select count(1) from (select base_entity_id from previous_contact
                   where previous_contact.contact_no = '1' group by base_entity_id
                   having sum(case when key = 'gest_age_openmrs' and cast(value as integer) > 12 then 1 else 0 end) > 0
                   and sum(case when key = 'contact_date' and value = strftime('%Y-%m-%d', '%s', 'localtime') then 1 else 0 end) > 0)"
    grouping: "anc"

  - key: "ME_HIV_Status_First_Visit_Prev_Negative"
    description: "HIV status first visit (Prev. negative)"
    indicatorQuery: "select count(1) from (select base_entity_id from previous_contact
                   where previous_contact.contact_no = '1' group by base_entity_id
                   having sum(case when key = 'health_conditions' and instr(value, 'hiv') = 0 then 1 else 0 end) > 0
                   and sum(case when key = 'contact_date' and value = strftime('%Y-%m-%d', '%s', 'localtime') then 1 else 0 end ) > 0)"
    grouping: "anc"

  - key: "ME_HIV_Status_First_Visit_Prev_Positive"
    description: "HIV status first visit (Prev. positive)"
    indicatorQuery: "select count(1) from (select base_entity_id from previous_contact
                   where previous_contact.contact_no = '1' group by base_entity_id
                   having sum(case when key = 'health_conditions' and instr(value, 'hiv') > 0 then 1 else 0 end) > 0
                   and sum(case when key = 'contact_date' and value = strftime('%Y-%m-%d', '%s', 'localtime') then 1 else 0 end ) > 0)"
    grouping: "anc"

  - key: "ME_HIV_Status_First_Visit_New_Negative"
    description: "HIV status first visit (New negative)"
    indicatorQuery: "select count(1) from (SELECT distinct base_entity_id FROM  previous_contact
                   where previous_contact.contact_no = '1' group by base_entity_id
                   having sum(case when key = 'hiv_test_result' and value = 'negative' then 1 else 0 end ) > 0
                   and sum(case when key = 'contact_date' and value = strftime('%Y-%m-%d', '%s', 'localtime') then 1 else 0 end ) > 0)"
    grouping: "anc"

  - key: "ME_HIV_Status_First_Visit_New_Positive"
    description: "HIV status first visit (New positive)"
    indicatorQuery: "select count(1) from (SELECT distinct base_entity_id FROM  previous_contact
                   where previous_contact.contact_no = '1' group by base_entity_id
                   having sum(case when key = 'hiv_test_result' and value = 'positive' then 1 else 0 end ) > 0
                   and sum(case when key = 'contact_date' and value = strftime('%Y-%m-%d', '%s', 'localtime') then 1 else 0 end ) > 0)"
    grouping: "anc"

  - key: "ME_HIV_Status_First_Visit_Not_Done"
    description: "HIV status first visit (Not done)"
    indicatorQuery: "select count(1) from (SELECT distinct base_entity_id FROM  previous_contact
                   where previous_contact.contact_no = '1' group by base_entity_id
                   having sum(case when key = 'hiv_test_status' and value = 'not_done' then 1 else 0 end ) > 0
                   or sum(case when key = 'hiv_test_status' then 1 else 0 end ) = 0
                   and sum(case when key = 'contact_date' and value = strftime('%Y-%m-%d', '%s', 'localtime') then 1 else 0 end ) > 0)"
    grouping: "anc"

  - key: "ME_ART_Status_First_Visit_Not_On_ART"
    description: "ART status first visit (Not on ART)"
    indicatorQuery: "select count(1) from (SELECT distinct base_entity_id FROM  previous_contact
                   where previous_contact.contact_no = '1' group by base_entity_id
                   having sum(case when key = 'health_conditions' and instr(value, 'hiv') > 0 then 1 else 0 end) > 0
                   and sum(case when key = 'medications' and instr(value, 'arvs') = 0 then 1 else 0 end ) > 0
                   and sum(case when key = 'contact_date' and value = strftime('%Y-%m-%d', '%s', 'localtime') then 1 else 0 end ) > 0)"
    grouping: "anc"

  - key: "ME_ART_Status_First_Visit_On_ART_Before_ANC"
    description: "ART status first visit( On ART before ANC)"
    indicatorQuery: "select count(1) from (SELECT base_entity_id FROM  previous_contact
                   where previous_contact.contact_no = '1' group by base_entity_id
                   having sum(case when key = 'health_conditions' and instr(value, 'hiv') > 0 then 1 else 0 end) > 0
                   and sum(case when key = 'medications' and instr(value, 'arvs') > 0 then 1 else 0 end ) > 0
                   and sum(case when key = 'contact_date' and value = strftime('%Y-%m-%d', '%s', 'localtime') then 1 else 0 end ) > 0)"
    grouping: "anc"

  - key: "ME_ART_Status_First_Visit_Start_ART_0_27_Weeks"
    description: "ART status First Visit (Start ART 0-27 weeks)"
    indicatorQuery: "select count(1) from (SELECT base_entity_id FROM  previous_contact
                   where previous_contact.contact_no = '1' group by base_entity_id
                   having sum(case when key = 'art_medication' and value = 'done' > 0 then 1 else 0 end ) > 0
                   and sum(case when key = 'hiv_test_result' and value = 'positive' then 1 else 0 end ) > 0
                   and sum(case when key = 'gest_age_openmrs' and cast(value as integer) <= 27 then 1 else 0 end ) > 0
                   and sum(case when key = 'contact_date' and value = strftime('%Y-%m-%d', '%s', 'localtime') then 1 else 0 end ) > 0)"
    grouping: "anc"

  - key: "ME_ART_Status_First_Visit_Start_ART_28_plus_Weeks"
    description: "ART status first visit (Start ART 28+ weeks)"
    indicatorQuery: "select count(1) from (SELECT base_entity_id FROM  previous_contact
                   where previous_contact.contact_no = '1' group by base_entity_id
                   having sum(case when key = 'art_medication' and value = 'done' > 0 then 1 else 0 end ) > 0
                   and sum(case when key = 'hiv_test_result' and value = 'positive' then 1 else 0 end ) > 0
                   and sum(case when key = 'gest_age_openmrs' and cast(value as integer) >= 28 then 1 else 0 end ) > 0
                   and sum(case when key = 'contact_date' and value = strftime('%Y-%m-%d', '%s', 'localtime') then 1 else 0 end ) > 0)"
    grouping: "anc"

  ##Booking Cohort
  - key: "ME_HIV_Status_Final_Prev_Negative"
    description: "HIV status Final (Prev negative)"
    indicatorQuery: "select count(1) from (select base_entity_id from previous_contact
                   where previous_contact.contact_no = '1' group by base_entity_id
                   having sum(case when key = 'health_conditions' and instr(value, 'hiv') = 0 then 1 else 0 end) > 0
                   and sum(case when key = 'contact_date' and value = strftime('%Y-%m-%d',  date('%s', '-6 months', 'localtime')) then 1 else 0 end) > 0)"
    grouping: "anc"

  - key: "ME_HIV_Status_Final_Prev_Positive"
    description: "HIV status Final (Prev positive)"
    indicatorQuery: "select count(1) from (select base_entity_id from previous_contact
                   where previous_contact.contact_no = '1' group by base_entity_id
                   having sum(case when key = 'health_conditions' and instr(value, 'hiv') > 0 then 1 else 0 end) > 0
                   and sum(case when key = 'contact_date' and value = strftime('%Y-%m-%d',  date('%s', '-6 months', 'localtime')) then 1 else 0 end) > 0)"
    grouping: "anc"

  - key: "ME_HIV_Status_Final_New_Negative"
    description: "HIV status Final (New negative)"
    indicatorQuery: "select count(1) from (select base_entity_id from previous_contact
                   where previous_contact.contact_no = '1' group by base_entity_id
                   having sum(case when key = 'hiv_test_result' and value = 'negative' then 1 else 0 end ) > 0
                   and sum(case when key = 'contact_date' and value = strftime('%Y-%m-%d',  date('%s', '-6 months', 'localtime')) then 1 else 0 end ) > 0)"
    grouping: "anc"

  - key: "ME_HIV_Status_Final_New_Positive"
    description: "HIV status Final (New positive)"
    indicatorQuery: "select count(1) from (SELECT distinct base_entity_id FROM  previous_contact
                   where previous_contact.contact_no = '1' group by base_entity_id
                   having sum(case when key = 'hiv_test_result' and value = 'positive' then 1 else 0 end ) > 0
                   and sum(case when key = 'contact_date' and value = strftime('%Y-%m-%d',  date('%s', '-6 months', 'localtime')) then 1 else 0 end ) > 0)"
    grouping: "anc"

  - key: "ME_HIV_Status_Final_Not_Done"
    description: "HIV status Final (Not done)"
    indicatorQuery: "select count(1) from (SELECT distinct base_entity_id FROM  previous_contact
                   where previous_contact.contact_no = '1' group by base_entity_id
                   having sum(case when key = 'hiv_test_status' and value = 'not_done' then 1 else 0 end ) > 0
                   or sum(case when key = 'hiv_test_status' then 1 else 0 end ) = 0
                   and sum(case when key = 'contact_date' and value = strftime('%Y-%m-%d',  date('%s', '-6 months', 'localtime')) then 1 else 0 end ) > 0)"
    grouping: "anc"

  - key: "ME_ART_Status_Final_Visit_Not_On_ART"
    description: "ART status Final Visit (Not on ART)"
    indicatorQuery: "select count(1) from (SELECT distinct base_entity_id FROM  previous_contact
                   where previous_contact.contact_no = '1' group by base_entity_id
                   having sum(case when key = 'hiv_test_result' and value = 'positive' then 1 else 0 end ) > 0
                   and sum(case when key = 'art_medication' and value = 'done' then 1 else 0 end ) > 0
                   and sum(case when key = 'contact_date' and value = strftime('%Y-%m-%d',  date('%s', '-6 months', 'localtime')) then 1 else 0 end ) > 0)"
    grouping: "anc"

  - key: "ME_ART_Status_Final_Visit_On_ART_Before_ANC"
    description: "ART status Final Visit ( On ART before ANC)"
    indicatorQuery: "select count(1) from (SELECT base_entity_id FROM  previous_contact
                   where previous_contact.contact_no = '1' group by base_entity_id
                   having sum(case when key = 'health_conditions' and instr(value, 'hiv') > 0 then 1 else 0 end) > 0
                   and sum(case when key = 'medications' and instr(value, 'arvs') > 0 then 1 else 0 end ) > 0
                   and sum(case when key = 'contact_date' and value = strftime('%Y-%m-%d',  date('%s', '-6 months', 'localtime')) then 1 else 0 end ) > 0)"
    grouping: "anc"

  - key: "ME_ART_Status_Final_Visit_Start_ART_0_27_Weeks"
    description: "ART status Final Visit (Start ART 0-27 weeks)"
    indicatorQuery: "select count(1) from (SELECT base_entity_id FROM  previous_contact
                   where previous_contact.contact_no = '1' group by base_entity_id
                   having sum(case when key = 'art_medication' and value = 'done' then 1 else 0 end ) > 0
                   and sum(case when key = 'hiv_test_result' and value = 'positive' then 1 else 0 end ) > 0
                   and sum(case when key = 'gest_age_openmrs' and cast(value as integer) <= 27 then 1 else 0 end ) > 0
                   and sum(case when key = 'contact_date' and value = strftime('%Y-%m-%d',  date('%s', '-6 months', 'localtime')) then 1 else 0 end ) > 0)"
    grouping: "anc"

  - key: "ME_ART_Status_Final_Visit_Start_ART_28_plus_Weeks"
    description: "ART status Final Visit (Start ART 28+ weeks)"
    indicatorQuery: "select count(1) from (SELECT distinct base_entity_id FROM  previous_contact
                   where previous_contact.contact_no = '1' group by base_entity_id
                   having sum(case when key = 'art_medication' and value = 'done' then 1 else 0 end ) > 0
                   and sum(case when key = 'hiv_test_result' and value = 'positive' then 1 else 0 end ) > 0
                   and sum(case when key = 'gest_age_openmrs' and cast(value as integer) >= 28 then 1 else 0 end ) > 0
                   and sum(case when key = 'contact_date' and value = strftime('%Y-%m-%d',  date('%s', '-6 months', 'localtime')) then 1 else 0 end ) > 0)"
    grouping: "anc"

  - key: "ME__CPT_out_of_HIV_positive"
    description: "On CPT out of HIV+"
    indicatorQuery: "select count(1) from (SELECT distinct base_entity_id FROM  previous_contact
                   where previous_contact.contact_no = '1' group by base_entity_id
                   having sum(case when key = 'cpt_medication' and value = 'done' then 1 else 0 end ) > 0
                   and sum(case when key = 'hiv_test_result' and value = 'positive' then 1 else 0 end ) > 0
                   and sum(case when key = 'contact_date' and value = strftime('%Y-%m-%d',  date('%s', '-6 months', 'localtime')) then 1 else 0 end ) > 0)"
    grouping: "anc"

  - key: "ME__Not_on_CPT"
    description: "Not on CPT"
    indicatorQuery: "select count(1) from (SELECT distinct base_entity_id FROM  previous_contact
                   where previous_contact.contact_no = '1' group by base_entity_id
                   having sum(case when key = 'cpt_medication' and value = 'not_done' then 1 else 0 end ) > 0
                   and sum(case when key = 'hiv_test_result' and value = 'positive' then 1 else 0 end ) > 0
                   and sum(case when key = 'contact_date' and value = strftime('%Y-%m-%d',  date('%s', '-6 months', 'localtime')) then 1 else 0 end ) > 0)"
    grouping: "anc"

  - key: "ME__NVP_syrup_given"
    description: "NVP syrup given"
    indicatorQuery: "select count(1) from (SELECT distinct base_entity_id FROM  previous_contact
                   where previous_contact.contact_no = '1' group by base_entity_id
                   having sum(case when key = 'nvp_medication' and value = 'done' then 1 else 0 end ) > 0
                   and sum(case when key = 'hiv_test_result' and value = 'positive' then 1 else 0 end ) > 0
                   and sum(case when key = 'contact_date' and value = strftime('%Y-%m-%d',  date('%s', '-6 months', 'localtime')) then 1 else 0 end ) > 0)"
    grouping: "anc"


  - key: "ME__NVP_syrup_not_given"
    description: "NVP syrup not given"
    indicatorQuery: "select count(1) from (SELECT distinct base_entity_id FROM  previous_contact
                   where previous_contact.contact_no = '1' group by base_entity_id
                   having sum(case when key = 'nvp_medication' and value = 'not_done' then 1 else 0 end ) > 0
                   and sum(case when key = 'hiv_test_result' and value = 'positive' then 1 else 0 end ) > 0
                   and sum(case when key = 'contact_date' and value = strftime('%Y-%m-%d',  date('%s', '-6 months', 'localtime')) then 1 else 0 end ) > 0)"
    grouping: "anc"

  - key: "ME_Total_Visits_Per_Woman_With_1_Visit"
    description: "Total visits per woman with 1 visit"
    indicatorQuery: "select count(1) from (select ec_mother_details.base_entity_id from ec_mother_details
                     join previous_contact on previous_contact.base_entity_id = ec_mother_details.base_entity_id
                     where ec_mother_details.next_contact = '2' group by ec_mother_details.base_entity_id
                     having sum(case when key = 'contact_date' and value = strftime('%Y-%m-%d',  date('%s', '-6 months', 'localtime')) then 1 else 0 end ) > 0)"
    grouping: "anc"

  - key: "ME_Total_Visits_Per_Woman_With_2_Visits"
    description: "Total visits per woman with 2 visits"
    indicatorQuery: "select count(1) from (select ec_mother_details.base_entity_id from ec_mother_details
                     join previous_contact on previous_contact.base_entity_id = ec_mother_details.base_entity_id
                     where ec_mother_details.next_contact = '3' group by ec_mother_details.base_entity_id
                     having sum(case when key = 'contact_date' and value = strftime('%Y-%m-%d',  date('%s', '-6 months', 'localtime')) then 1 else 0 end ) > 0)"
    grouping: "anc"

  - key: "ME_Total_Visits_Per_Woman_With_3_Visits"
    description: "Total visits per woman with 3 visits"
    indicatorQuery: "select count(1) from (select ec_mother_details.base_entity_id from ec_mother_details
                     join previous_contact on previous_contact.base_entity_id = ec_mother_details.base_entity_id
                     where ec_mother_details.next_contact = '4' group by ec_mother_details.base_entity_id
                     having sum(case when key = 'contact_date' and value = strftime('%Y-%m-%d',  date('%s', '-6 months', 'localtime')) then 1 else 0 end ) > 0)"
    grouping: "anc"

  - key: "ME_Total_Visits_Per_Woman_With_4_Visits"
    description: "Total visits per woman with 4 visits"
    indicatorQuery: "select count(1) from (select ec_mother_details.base_entity_id from ec_mother_details
                     join previous_contact on previous_contact.base_entity_id = ec_mother_details.base_entity_id
                     where ec_mother_details.next_contact = '5' group by ec_mother_details.base_entity_id
                     having sum(case when key = 'contact_date' and value = strftime('%Y-%m-%d',  date('%s', '-6 months', 'localtime')) then 1 else 0 end ) > 0)"
    grouping: "anc"

  - key: "ME_Total_Visits_Per_Woman_With_5_plus_Visits"
    description: "Total visits per woman with 5+ visits"
    indicatorQuery: "select count(1) from (select ec_mother_details.base_entity_id from ec_mother_details
                     join previous_contact on previous_contact.base_entity_id = ec_mother_details.base_entity_id
                     where cast(ec_mother_details.next_contact as integer) >= 5 group by ec_mother_details.base_entity_id
                     having sum(case when key = 'contact_date' and value = strftime('%Y-%m-%d',  date('%s', '-6 months', 'localtime')) then 1 else 0 end ) > 0)"
    grouping: "anc"

  - key: "ME_With_Preeclampsia"
    description: "With preeclampsia"
    indicatorQuery: "select count(1) from ((SELECT base_entity_id FROM  previous_contact
                   where previous_contact.contact_no = '1' group by base_entity_id
                   having sum(case when key = 'severe_preeclampsia' and value  = '1' or key = 'preeclampsia' and value  = '1' then 1 else 0 end) > 0
                   and sum(case when key = 'contact_date' and value = strftime('%Y-%m-%d',  date('%s', '-6 months', 'localtime')) then 1 else 0 end)))"
    grouping: "anc"

  - key: "ME_With_No_Preeclampsia"
    description: "With no pre eclampsia"
    indicatorQuery: "select count(1) from (SELECT base_entity_id FROM  previous_contact
                   where previous_contact.contact_no = '1' group by base_entity_id
                   having sum(case when key = 'severe_preeclampsia' and value  <> '1' then 1 else 0 end) > 0
                   and sum(case when key = 'preeclampsia' and value  <> '1' then 1 else 0 end) >0
                   and sum(case when key = 'contact_date' and value = strftime('%Y-%m-%d',  date('%s', '-6 months', 'localtime')) then 1 else 0 end) > 0 )"
    grouping: "anc"

  - key: "ME_Total_Number_With_TDV_doses_less_than_2"
    description: "Total number with TDV doses < 2"
    indicatorQuery: "select count(1) from ((SELECT base_entity_id FROM  previous_contact
                   where previous_contact.contact_no = '1' group by base_entity_id
                   having sum (case when key = 'tt_immun_status' and (value = 'tdv_not_received' or value = '1_received') then 1 else 0 end) > 0
                   and sum(case when key = 'contact_date' and value = strftime('%Y-%m-%d',  date('%s', '-6 months', 'localtime')) then 1 else 0 end) > 0 ))"
    grouping: "anc"

  - key: "ME_Total_Number_With_TDV_doses_2_plus"
    description: "Total number with TDV doses  2+"
    indicatorQuery: "select count(1) from ((SELECT base_entity_id FROM  previous_contact
                   where previous_contact.contact_no = '1' group by base_entity_id
                   having sum (case when key = 'tt_immun_status' and (value = '2-4_doses' or value = '5_tdv_doses_received') then 1 else 0 end) > 0
                   and sum(case when key = 'contact_date' and value = strftime('%Y-%m-%d',  date('%s', '-6 months', 'localtime')) then 1 else 0 end) > 0 ))"
    grouping: "anc"

  - key: "ME_SP_Doses_0_Dose"
    description: "SP doses 0 dose"
    indicatorQuery: "select count(1) from ((SELECT base_entity_id FROM  previous_contact
                   where previous_contact.contact_no = '1' group by base_entity_id
                   having sum (case when key = 'iptp_sp1' and value <> 'done' then 1 else 0 end) > 0
                   or sum (case when key = 'iptp_sp1' then 1 else 0 end) = 0
                   and sum(case when key = 'contact_date' and value = strftime('%Y-%m-%d',  date('%s', '-6 months', 'localtime')) then 1 else 0 end) > 0 ))"
    grouping: "anc"

  - key: "ME_SP_Doses_1_Dose"
    description: "SP doses 1 dose"
    indicatorQuery: "select count(1) from ((SELECT base_entity_id FROM  previous_contact
                   where previous_contact.contact_no = '1' group by base_entity_id
                   having sum (case when key = 'iptp_sp1' and value = 'done' then 1 else 0 end) > 0
                   and sum (case when key = 'iptp_sp2' then 1 else 0 end) = 0
                   and sum(case when key = 'contact_date' and value = strftime('%Y-%m-%d',  date('%s', '-6 months', 'localtime')) then 1 else 0 end) > 0 ))"
    grouping: "anc"

  - key: "ME_SP_Doses_2_Dose"
    description: "SP doses 2 dose"
    indicatorQuery: "select count(1) from ((SELECT base_entity_id FROM  previous_contact
                   where previous_contact.contact_no = '1' group by base_entity_id
                   having sum (case when key = 'iptp_sp2' and value = 'done' then 1 else 0 end) > 0
                   and sum (case when key = 'iptp_sp3' then 1 else 0 end) = 0
                   and sum(case when key = 'contact_date' and value = strftime('%Y-%m-%d',  date('%s', '-6 months', 'localtime')) then 1 else 0 end) > 0 ))"
    grouping: "anc"

  - key: "ME_SP_Doses_3_plus_Dose"
    description: "SP doses 3+ dose"
    indicatorQuery: "select count(1) from ((SELECT base_entity_id FROM  previous_contact
                   where previous_contact.contact_no = '1' group by base_entity_id
                   having sum(case when key = 'iptp_sp3' and value = 'done' then 1 else 0 end ) > 0
                   and sum (case when key = 'contact_date' and value = strftime('%Y-%m-%d',  date('%s', '-6 months', 'localtime')) then 1 else 0 end) >0 ))"
    grouping: "anc"

  - key: "ME_Albendazole_doses_None"
    description: "Albendazole doses None"
    indicatorQuery: "select count(1) from ((SELECT base_entity_id FROM  previous_contact
                   where previous_contact.contact_no = '1' group by base_entity_id
                   having sum(case when key = 'deworm' and value <> 'done' then 1 else 0 end ) > 0
                   or sum(case when key = 'deworm' then 1 else 0 end) = 0
                   and sum (case when key = 'contact_date' and value = strftime('%Y-%m-%d',  date('%s', '-6 months', 'localtime')) then 1 else 0 end) >0 ))"
    grouping: "anc"

  - key: "ME_Albendazole_doses_One_dose"
    description: "Albendazole doses 1 dose"
    indicatorQuery: "select count(1) from ((SELECT base_entity_id FROM  previous_contact
                   where previous_contact.contact_no = '1' group by base_entity_id
                   having sum(case when key = 'deworm' and value = 'done' then 1 else 0 end ) > 0
                   and sum (case when key = 'contact_date' and value = strftime('%Y-%m-%d',  date('%s', '-6 months', 'localtime')) then 1 else 0 end) >0 ))"
    grouping: "anc"

  - key: "ME_ITN_Bed_Nets_Given"
    description: "ITN (bed nets) given"
    indicatorQuery: "select count(1) from ((SELECT base_entity_id FROM  previous_contact
                   where previous_contact.contact_no = '1' group by base_entity_id
                   having sum (case when key = 'itn_given' and value = 'done' then 1 else 0 end) > 0
                   and sum(case when key = 'contact_date' and value = strftime('%Y-%m-%d',  date('%s', '-6 months', 'localtime')) then 1 else 0 end) > 0 ))"
    grouping: "anc"

  - key: "ME_ITN_Bed_Nets_Not_Given"
    description: "ITN (bed nets) not given"
    indicatorQuery: "select count(1) from ((SELECT base_entity_id FROM  previous_contact
                   where previous_contact.contact_no = '1' group by base_entity_id
                   having sum (case when key = 'itn_given' and value <> 'done' then 1 else 0 end) > 0
                   or sum (case when key = 'itn_given' then 1 else 0 end) = 0
                   and sum(case when key = 'contact_date' and value = strftime('%Y-%m-%d',  date('%s', '-6 months', 'localtime')) then 1 else 0 end) > 0 ))"
    grouping: "anc"

  - key: "ME_Hb_(g/dl)_less_than_7"
    description: "Hb (g/dl)  < 7"
    indicatorQuery: "select count(1) from ((SELECT base_entity_id FROM  previous_contact
                   where previous_contact.contact_no = '1' group by base_entity_id
                   having sum(case when key = 'hb_result' and cast(value as integer) < 7 then 1 else 0 end) > 0
                   and sum(case when key = 'contact_date' and value = strftime('%Y-%m-%d',  date('%s', '-6 months', 'localtime')) then 1 else 0 end) > 0 ))"
    grouping: "anc"

  - key: "ME_Hb_g_over_dl_greater_than_and_equal_to_7"
    description: "Hb (g/dl) >= 7"
    indicatorQuery: "select count(1) from ((SELECT base_entity_id FROM  previous_contact
                   where previous_contact.contact_no = '1' group by base_entity_id
                   having sum (case when key = 'hb_result' and cast(value as integer) >= 7 then 1 else 0 end) > 0
                   and sum(case when key = 'contact_date' and value = strftime('%Y-%m-%d',  date('%s', '-6 months', 'localtime')) then 1 else 0 end) > 0 ))"
    grouping: "anc"

  - key: "ME_Hb_g_over_dl_ND"
    description: "Hb (g/dl) ND"
    indicatorQuery: "select count(1) from ((SELECT base_entity_id FROM  previous_contact
                   where previous_contact.contact_no = '1' group by base_entity_id
                   having sum( case when key = 'hb_test_status' and value = 'not_done' then 1 else 0 end) > 0
                   or sum( case when key = 'hb_test_status' then 1 else 0 end) = 0
                   and sum(case when key = 'contact_date' and value = strftime('%Y-%m-%d',  date('%s', '-6 months', 'localtime')) then 1 else 0 end) > 0 ))"
    grouping: "anc"

  - key: "ME_Syphilis_Status_Negative"
    description: "Syphilis status Negative"
    indicatorQuery: "select count(1) from ((SELECT base_entity_id FROM previous_contact
                   where previous_contact.contact_no = '1' group by base_entity_id
                   having sum(case when key = 'syphilis_positive' and value = '0' then 1 else 0 end ) > 0
                   and sum(case when key = 'contact_date' and value = strftime('%Y-%m-%d',  date('%s', '-6 months', 'localtime')) then 1 else 0 end) > 0 ))"
    grouping: "anc"

  - key: "ME_Syphilis_Status_Positive"
    description: "Syphilis status Positive"
    indicatorQuery: "select count(1) from ((SELECT base_entity_id FROM previous_contact
                   where previous_contact.contact_no = '1' group by base_entity_id
                   having sum(case when key = 'syphilis_positive' and value = '1' then 1 else 0 end ) > 0
                   and sum(case when key = 'contact_date' and value = strftime('%Y-%m-%d',  date('%s', '-6 months', 'localtime')) then 1 else 0 end) > 0 ))"
    grouping: "anc"

  - key: "ME_Syphilis_Status_Not_Done"
    description: "Syphilis status Not Done"
    indicatorQuery: "select count(1) from ((SELECT base_entity_id FROM previous_contact
                   where previous_contact.contact_no = '1' group by base_entity_id
                   having sum(case when key = 'syph_test_status' and value = 'not_done' then 1 else 0 end ) > 0
                   or sum(case when key = 'syph_test_status' then 1 else 0 end ) = 0
                   and sum(case when key = 'contact_date' and value = strftime('%Y-%m-%d',  date('%s', '-6 months', 'localtime')) then 1 else 0 end) > 0 ))"
    grouping: "anc"

##OPD Reports
  - key: "ME_Malaria_Cases_Confirmed"
    description: "Malaria cases"
    indicatorQuery: "SELECT
                     	CASE
                     		WHEN round(julianday('now') - julianday(ec_client.dob)) > 1827 THEN 'Over_5'
                     		WHEN round(julianday('now') - julianday(ec_client.dob)) <= 1827 THEN 'Under_5'
                     		ELSE 'Null'
                     	END age, count(*)
                        FROM opd_diagnosis_detail b
                        INNER JOIN ec_client
                        ON b.base_entity_id = ec_client.base_entity_id
                        WHERE b.code in ('code_32aCo','code_32bCo')
                        AND b.visit_id IN (SELECT distinct(p.visit_id) FROM opd_details p WHERE '%s'=strftime('%Y-%m-%d', p.created_at))
                        GROUP  BY age"
    isMultiResult: true
    expectedIndicators:
      - "ME_Malaria_Cases_Confirmed_Over_5"
      - "ME_Malaria_Cases_Confirmed_Under_5"
     grouping: "opd"

  - key: "ME_Malaria_Cases_Presumed"
    description: "Malaria cases"
    indicatorQuery: "SELECT
                     	CASE
                     		WHEN round(julianday('now') - julianday(ec_client.dob)) > 1827 THEN 'Over_5'
                     		WHEN round(julianday('now') - julianday(ec_client.dob)) <= 1827 THEN 'Under_5'
                     		ELSE 'Null'
                     	END age, count(*)
                     	FROM opd_diagnosis_detail b
                     	INNER JOIN ec_client
                     	ON b.base_entity_id = ec_client.base_entity_id
                     	WHERE b.code in ('code_32aPr','code_32bPr')
                     	AND b.visit_id NOT IN (SELECT distinct(c.visit_id) from opd_test_conducted c where c.test_type like '%Malaria%')
                        AND b.visit_id IN (SELECT distinct(p.visit_id) FROM opd_details p WHERE '%s'=strftime('%Y-%m-%d', p.created_at))
                     	GROUP  BY age"
    isMultiResult: true
    expectedIndicators:
      - "ME_Malaria_Cases_Presumed_Over_5"
      - "ME_Malaria_Cases_Presumed_Under_5"
      grouping: "opd"

  - key: "ME_Total_Malaria_Cases"
    description: "Malaria total cases"
    indicatorQuery: "SELECT
                     	CASE
                     		WHEN round(julianday('now') - julianday(ec_client.dob)) > 1827 THEN 'Over_5'
                     		WHEN round(julianday('now') - julianday(ec_client.dob)) <= 1827 THEN 'Under_5'
                     		ELSE 'Null'
                     	END age, count(*)
                     	FROM opd_diagnosis_detail b
                     	INNER JOIN ec_client
                     	ON b.base_entity_id = ec_client.base_entity_id
                     	WHERE b.code in ('code_32aCo','code_32bCo','code_32aPr','code_32bPr')
                     	AND b.visit_id IN (SELECT distinct(p.visit_id) FROM opd_details p WHERE '%s'=strftime('%Y-%m-%d', p.created_at))
                     	GROUP  BY age"
    isMultiResult: true
    expectedIndicators:
      - "ME_Total_Malaria_Cases_Over_5"
      - "ME_Total_Malaria_Cases_Under_5"
    grouping: "opd"

  - key: "ME_Anti_Malaria_Treatment_Confirmed"
    description: "Malaria anti malarial treatment"
    indicatorQuery: "SELECT
                     	CASE
                     		WHEN round(julianday('now') - julianday(ec_client.dob)) > 1827 THEN 'Over_5'
                     		WHEN round(julianday('now') - julianday(ec_client.dob)) <= 1827 THEN 'Under_5'
                     		ELSE 'Null'
                     	END age, count(*)
                        FROM opd_diagnosis_detail b
                        INNER JOIN ec_client
                        ON b.base_entity_id = ec_client.base_entity_id
                        WHERE b.code in ('code_32aCo','code_32bCo')
                        AND b.visit_id IN (SELECT distinct(p.visit_id) FROM opd_details p WHERE '%s'=strftime('%Y-%m-%d', p.created_at))
                        GROUP  BY age,b.type"
    isMultiResult: true
    expectedIndicators:
      - "ME_Anti_Malaria_Treatment_Confirmed_Over_5"
      - "ME_Anti_Malaria_Treatment_Confirmed_Under_5"
    grouping: "opd"

  - key: "ME_Anti_Malaria_Treatment_Presumed"
    description: "Malaria anti malarial treatment"
    indicatorQuery: "SELECT
                     	CASE
                     		WHEN round(julianday('now') - julianday(ec_client.dob)) > 1827 THEN 'Over_5'
                     		WHEN round(julianday('now') - julianday(ec_client.dob)) <= 1827 THEN 'Under_5'
                     		ELSE 'Null'
                     	END age, count(*)
                        FROM opd_diagnosis_detail b
                        INNER JOIN ec_client
                        ON b.base_entity_id = ec_client.base_entity_id
                        WHERE b.code in ('code_32aCo','code_32bCo')
                        AND b.visit_id IN (SELECT distinct(p.visit_id) FROM opd_details p WHERE '%s'=strftime('%Y-%m-%d', p.created_at))
                        GROUP  BY age,b.type"
    isMultiResult: true
    expectedIndicators:
      - "ME_Anti_Malaria_Treatment_Presumed_Over_5"
      - "ME_Anti_Malaria_Treatment_Presumed_Under_5"
    grouping: "opd"

  - key: "ME_Malaria_Test"
    description: "Malaria tests"
    indicatorQuery: "SELECT
                     CASE
                     	WHEN b.test_type='Malaria MRDT' THEN 'mRDT'
                     	WHEN b.test_type='Malaria Microscopy' THEN 'Microscopy'
                     ELSE 'Null' END malaria_test,
                     CASE
                     	WHEN round(julianday('now') - julianday(ec_client.dob)) > 1827 THEN 'Over_5'
                     	WHEN round(julianday('now') - julianday(ec_client.dob)) <= 1827 THEN 'Under_5'
                     ELSE 'Null' END age,
                     count(*)
                     FROM opd_test_conducted b
                     INNER JOIN ec_client
                     ON b.base_entity_id = ec_client.base_entity_id
                     WHERE b.test_type in ('Malaria MRDT','Malaria Microscopy')
                     AND b.visit_id IN (SELECT distinct(p.visit_id) FROM opd_details p WHERE '%s'=strftime('%Y-%m-%d', p.created_at))
                     GROUP  BY age,malaria_test"
    isMultiResult: true
    expectedIndicators:
        - "ME_Malaria_Test_mRDT_Over_5"
        - "ME_Malaria_Test_mRDT_Under_5"
        - "ME_Malaria_Test_Microscopy_Over_5"
        - "ME_Malaria_Test_Microscopy_Under_5"
    grouping: "opd"

  - key: "ME_Positive_Malaria_Cases"
    description: "Positive malaria cases"
    indicatorQuery: "SELECT
                     CASE
                     	WHEN b.test_type='Malaria MRDT' THEN 'mRDT'
                     	WHEN b.test_type='Malaria - Microscopy' THEN 'Microscopy'
                     ELSE 'Null' END malaria_test,
                     CASE
                     	WHEN round(julianday('now') - julianday(ec_client.dob)) > 1827 THEN 'Over_5'
                     	WHEN round(julianday('now') - julianday(ec_client.dob)) <= 1827 THEN 'Under_5'
                     ELSE 'Null' END age, count(*)
                     FROM opd_test_conducted b
                     INNER JOIN ec_client
                     ON b.base_entity_id = ec_client.base_entity_id
                     WHERE b.test_type in ('Malaria MRDT','Malaria Microscopy')
                     AND b.result='Positive'
                     AND b.visit_id IN (SELECT distinct(p.visit_id) FROM opd_details p WHERE '%s'=strftime('%Y-%m-%d', p.created_at))
                     GROUP  BY age,malaria_test,b.result"
    isMultiResult: true
    expectedIndicators:
      - "ME_Positive_Malaria_Cases_Malaria_MRDT_Over_5"
      - "ME_Positive_Malaria_Cases_Malaria_MRDT_Under_5"
      - "ME_Positive_Malaria_Cases_Malaria_Microscopy_Over_5"
      - "ME_Positive_Malaria_Cases_Malaria_Microscopy_Under_5"
    grouping: "opd"

  - key: "ME_Total_Suspected_Malaria"
    description: "Total suspected malaria cases"
    indicatorQuery: "SELECT count(*) FROM (SELECT b.base_entity_id,b.visit_id
                     FROM opd_diagnosis_detail b
                     	WHERE b.code in ('code_32aPr','code_32bPr')
                     		AND b.visit_id NOT IN (SELECT distinct(c.visit_id) from opd_test_conducted c where c.test_type like '%Malaria%')
                     		AND b.visit_id IN (SELECT distinct(p.visit_id)  FROM opd_details p WHERE '%s'=strftime('%Y-%m-%d', p.created_at))
                     	UNION
                     SELECT d.base_entity_id
                     FROM opd_test_conducted d
                     	WHERE d.test_type in ('Malaria MRDT','Malaria Microscopy')
                     	AND d.visit_id IN (SELECT distinct(p.visit_id) FROM opd_details p WHERE '%s'=strftime('%Y-%m-%d', p.created_at))
                     )"
    grouping: "opd"

  ##Maternity
  - key: "ME_HIV_Previous"
    description: "Maternity HIV previous positive"
    indicatorQuery: "SELECT count(1)
                     FROM maternity_outcome
                     WHERE hiv_status_previous='Positive'
                     AND '%s' = strftime('%Y-%m-%d', date)"
    grouping: "maternity"

  - key: "ME_HIV_Current"
    description: "Maternity HIV current"
    indicatorQuery: "SELECT
                     CASE
                     	WHEN hiv_status_current='Negative' THEN 'New_Negative'
                     	WHEN hiv_status_current ='Positive' THEN 'New_Positive'
                     	ELSE 'Not_Done'
                     END descr,count (*)
                     FROM maternity_outcome
                     WHERE '%s' = strftime('%Y-%m-%d', date)
                     GROUP BY descr"
    isMultiResult: true
    expectedIndicators:
      - "ME_HIV_Current_New_Negative"
      - "ME_HIV_Current_New_Positive"
      - "ME_HIV_Current_Not_Done"
    grouping: "maternity"

  - key: "ME_ART_Start"
    description: "Maternity ART start period"
    indicatorQuery: "SELECT
                     CASE
                     	WHEN hiv_treatment_start='On ART before pregnancy' THEN 'Before_Pregnacy'
                     	WHEN hiv_treatment_start='1st or 2nd Trimester (0-27 weeks)' THEN 'First_Trimester'
                     	WHEN hiv_treatment_start='3rd Trimester (28+)' THEN 'Third_Trimester'
                     	WHEN hiv_treatment_start='During Labour' THEN 'Labour'
                     	ELSE 'Not_On_ART'
                     END treatment,count (*)
                     FROM maternity_outcome
                     WHERE '%s' = strftime('%Y-%m-%d', date)
                     GROUP BY hiv_treatment_start"
    isMultiResult: true
    expectedIndicators:
      - "ME_ART_Start_Before_Pregnacy"
      - "ME_ART_Start_First_Trimester"
      - "ME_ART_Start_Third_Trimester"
      - "ME_ART_Start_Labour"
      - "ME_ART_Not_On_ART"
    grouping: "maternity"

  - key: "ME_MAT_Complications"
    description: "Maternity obstetric complications"
    indicatorQuery: "SELECT * FROM (
                     SELECT
                     CASE
                        WHEN obstetric_complications LIKE '%None%' THEN 'None'
                     	WHEN obstetric_complications LIKE '%Antepartum haemorrhage%' THEN 'APH'
                     	WHEN obstetric_complications LIKE '%Postpartum Haemorhage%' THEN 'PPH'
                     	WHEN obstetric_complications LIKE '%Obstructed/Prolonged Labour%' THEN 'OPL'
                     	WHEN obstetric_complications LIKE '%Pre-eclampsia%' OR '%Eclampsia%' THEN 'ECL'
                     	WHEN obstetric_complications LIKE '%Sepsis%' THEN 'SEP'
                     	WHEN obstetric_complications LIKE '%Ruptured Uterus%' THEN 'RU'
                     	WHEN obstetric_complications LIKE '%Retained placenta%' THEN 'RP'
                     	WHEN obstetric_complications LIKE '%Fetal distress%' THEN 'FD'
                     	ELSE 'Null'
                      END complications,count (*)
                      FROM maternity_outcome
                      WHERE '%s' = strftime('%Y-%m-%d', date)
                      GROUP BY complications
                      UNION
                      SELECT
                      CASE
                      WHEN obstetric_complications LIKE '%Abnormal presentation%' THEN 'Other'
                      WHEN obstetric_complications LIKE '%Cord prolapse%' THEN 'Other'
                      WHEN obstetric_complications LIKE '%Haemorrhage%' THEN 'Other'
                      WHEN obstetric_complications LIKE '%Perineal tear (2nd, 3rd, or 4th degree)%' THEN 'Other'
                      WHEN obstetric_complications LIKE '%Placenta praevia%' THEN 'Other'
                      WHEN obstetric_complications LIKE '%Placental abruption%' THEN 'Other'
                      WHEN obstetric_complications LIKE '%Premature labour%' THEN 'Other'
                      WHEN obstetric_complications LIKE '%Severe Anaemia%' THEN 'Other'
                      WHEN obstetric_complications LIKE '%Symphysiotomy%' THEN 'Other'
                      WHEN obstetric_complications ='' THEN 'Other'
                      ELSE 'Null'
                      END complications,count (*)
                      FROM maternity_outcome
                      WHERE '%s' = strftime('%Y-%m-%d', date)
                      GROUP BY complications
                      ) a
                      WHERE complications !='Null'
                      GROUP BY a.complications"
    isMultiResult: true
    expectedIndicators:
      - "ME_MAT_Complications_APH"
      - "ME_MAT_Complications_PPH"
      - "ME_MAT_Complications_OPL"
      - "ME_MAT_Complications_ECL"
      - "ME_MAT_Complications_SEP"
      - "ME_MAT_Complications_RU"
      - "ME_MAT_Complications_RP"
      - "ME_MAT_Complications_FD"
      - "ME_MAT_Complications_Other"
      - "ME_MAT_Complications_None"
    grouping: "maternity"

  - key: "ME_MAT_Care"
    description: "Maternity obstetric care"
    indicatorQuery: "SELECT 'None',count(*) FROM maternity_outcome WHERE obstetric_care LIKE '%None%' AND '%s' = strftime('%Y-%m-%d', date)
                     UNION SELECT 'Ox',count(*) FROM maternity_outcome WHERE obstetric_care LIKE '%Oxytocin%' AND '%s' = strftime('%Y-%m-%d', date)
                     UNION SELECT 'AC',count(*) FROM maternity_outcome WHERE obstetric_care LIKE '%Anticonvulsants%' AND '%s' = strftime('%Y-%m-%d', date)
                     UNION SELECT 'Abx',count(*) FROM maternity_outcome WHERE obstetric_care LIKE '%Antibiotics%' AND '%s' = strftime('%Y-%m-%d', date)
                     UNION SELECT 'Acs',count(*) FROM maternity_outcome WHERE (obstetric_care LIKE '%Antenatal corticosteroids (Dose 1)%' OR obstetric_care LIKE '%Antenatal corticosteroids (Dose 2)%') AND '%s' = strftime('%Y-%m-%d', date)
                     UNION SELECT 'Tr',count(*) FROM maternity_outcome WHERE obstetric_care LIKE '%Blood transfusion%' AND '%s' = strftime('%Y-%m-%d', date)
                     UNION SELECT 'MRP',count(*) FROM maternity_outcome WHERE obstetric_care LIKE '%Manual removal of placenta (MRP)%' AND '%s' = strftime('%Y-%m-%d', date)
                     UNION SELECT 'NASG',count(*) FROM maternity_outcome WHERE obstetric_care LIKE '%Non-pneumatic anti shock garment (NASG)%' AND '%s' = strftime('%Y-%m-%d', date)
                     UNION SELECT 'ROPC',count(*) FROM maternity_outcome WHERE obstetric_care LIKE '%Removal of retained products of conception (RPOC)%' AND '%s' = strftime('%Y-%m-%d', date)
                     "

    isMultiResult: true
    expectedIndicators:
      - "ME_MAT_Care_None"
      - "ME_MAT_Care_Ox"
      - "ME_MAT_Care_AC"
      - "ME_MAT_Care_Abx"
      - "ME_MAT_Care_Acs"
      - "ME_MAT_Care_Tr"
      - "ME_MAT_Care_MRP"
      - "ME_MAT_Care_NASG"
      - "ME_MAT_Care_ROPC"
    grouping: "maternity"

  - key: "ME_MAT_Referred"
    description: "Maternity Referred out"
    indicatorQuery: "SELECT count(1)
                     FROM maternity_outcome
                     WHERE referred_out='Yes'
                     AND '%s' = strftime('%Y-%m-%d', date)"
    grouping: "maternity"

  - key: "ME_MAT_Delivery_Person"
    description: "Maternity staff conducting delivery"
    indicatorQuery: "SELECT
                     CASE
                     	WHEN delivery_person LIKE '%Medical Doctor (MD)%' THEN 'Skilled'
                     	WHEN delivery_person LIKE '%Clinical Officer (CO)%' THEN 'Skilled'
                     	WHEN delivery_person LIKE '%Medical Assistant (MA)%' THEN 'Skilled'
                     	WHEN delivery_person LIKE '%Nurse Midwife%' THEN 'Skilled'
                     	ELSE 'Not_skilled'
                     	END delivery_person,count (*)
                     FROM maternity_outcome
                     WHERE '%s' = strftime('%Y-%m-%d', date)
                     GROUP BY delivery_person"

    isMultiResult: true
    expectedIndicators:
      - "ME_MAT_Delivery_Person_Skilled"
      - "ME_MAT_Delivery_Person_Not_skilled"
    grouping: "maternity"

  - key: "ME_MAT_Vitamin_A"
    description: "Maternity vitamin A given"
    indicatorQuery: "SELECT count(1)
                     FROM maternity_outcome
                     WHERE vit_a='Yes'
                     AND '%s' = strftime('%Y-%m-%d', date)"
    grouping: "maternity"

  - key: "ME_MAT_Mother_Status"
    description: "Maternity Mother Status"
    indicatorQuery: "SELECT
                     CASE WHEN mother_status='Alive' THEN 'Alive'
                     	WHEN mother_status='Brought In Dead (BID)' THEN 'BID'
                     	WHEN mother_status='Died Before Discharge (DBD)' THEN 'DBD'
                     	ELSE 'Null'
                     END status,count(1)
                     FROM maternity_outcome
                     WHERE '%s' = strftime('%Y-%m-%d', date)
                     GROUP BY mother_status"
    isMultiResult: true
    expectedIndicators:
      - "ME_MAT_Mother_Status_Alive"
      - "ME_MAT_Mother_Status_BID"
      - "ME_MAT_Mother_Status_DBD"
    grouping: "maternity"

  - key: "ME_MAT_Babies"
    description: "Maternity Babies "
    indicatorQuery: "SELECT
                     CASE
                     	WHEN a.counter>1 THEN 'Multiple'
                     	ELSE 'Single'
                     	END birth,sum(a.counter)
                     FROM (SELECT count(*) counter from maternity_baby
                     WHERE '%s' = strftime('%Y-%m-%d', event_date)
                     GROUP BY mother_base_entity_id) a
                     GROUP BY birth"
    isMultiResult: true
    expectedIndicators:
      - "ME_MAT_Babies_Multiple"
      - "ME_MAT_Babies_Single"
    grouping: "maternity"

  - key: "ME_MAT_Delivery_Place"
    description: "Maternity delivery place "
    indicatorQuery: "SELECT
                     CASE
                     	WHEN delivery_place='In Transit (TR)' THEN 'TR'
                     	WHEN delivery_place='This Facility' THEN 'Facility'
                     	WHEN delivery_place='Other Facility' THEN 'Other'
                     	WHEN delivery_place='Home/Traditional Birth Authority (TBA)' THEN 'Home'
                     	ELSE 'Null'
                      END delivery_place,count(*)
                      FROM maternity_outcome
                      WHERE '%s' = strftime('%Y-%m-%d', date)
                      GROUP BY delivery_place"
    isMultiResult: true
    expectedIndicators:
      - "ME_MAT_Delivery_Place_This"
      - "ME_MAT_Delivery_Place_TR"
      - "ME_MAT_Delivery_Place_Other"
      - "ME_MAT_Delivery_Place_Home"
    grouping: "maternity"

  - key: "ME_MAT_Delivery_Mode"
    description: "Maternity delivery mode "
    indicatorQuery: "SELECT
                     CASE
                     	WHEN delivery_mode='Spontaneous Vertex (SVD)' THEN 'SVD'
                     	WHEN delivery_mode='Vacuum Extraction (VE)' THEN 'VE'
                     	WHEN delivery_mode='Breech (BR)' THEN 'BR'
                     	WHEN delivery_mode='Caesarean Section (CS)' THEN 'CS'
                     	ELSE 'Null'
                     	END delivery_mode  ,count(*)
                     FROM maternity_outcome
                     WHERE '%s' = strftime('%Y-%m-%d', date)
                     GROUP BY delivery_mode"
    isMultiResult: true
    expectedIndicators:
      - "ME_MAT_Delivery_Mode_SVD"
      - "ME_MAT_Delivery_Mode_VE"
      - "ME_MAT_Delivery_Mode_BR"
      - "ME_MAT_Delivery_Mode_CS"
    grouping: "maternity"

  - key: "ME_MAT_Baby_Complications"
    description: "Maternity baby complications"
    indicatorQuery: "SELECT 'None',count(*) FROM maternity_baby WHERE complications LIKE '%None%' AND '%s' = strftime('%Y-%m-%d', event_date)
                     UNION SELECT 'Prem',count(*) FROM maternity_baby WHERE complications LIKE '%Premature%' AND '%s' = strftime('%Y-%m-%d', event_date)
                     UNION SELECT 'Asphy',count(*) FROM maternity_baby WHERE complications LIKE '%Asphyxia%' AND '%s' = strftime('%Y-%m-%d', event_date)
                     UNION SELECT 'Sep',count(*) FROM maternity_baby WHERE complications LIKE '%Sepsis%' AND '%s' = strftime('%Y-%m-%d', event_date)
                     UNION SELECT 'Defects',count(*) FROM maternity_baby WHERE complications LIKE '%Birth defects%' AND '%s' = strftime('%Y-%m-%d', event_date)
                     UNION SELECT 'Other',count(*) FROM maternity_baby WHERE (complications LIKE '%Other (Specify)%' OR complications ='') AND '%s' = strftime('%Y-%m-%d', event_date)
                     UNION SELECT 'Low_Weight',count(*) from maternity_baby WHERE Weight<'2500' AND '%s' = strftime('%Y-%m-%d', event_date)"

    isMultiResult: true
    expectedIndicators:
      - "ME_MAT_Baby_Complications_None"
      - "ME_MAT_Baby_Complications_Prem"
      - "ME_MAT_Baby_Complications_Asphy"
      - "ME_MAT_Baby_Complications_Sep"
      - "ME_MAT_Baby_Complications_Defects"
      - "ME_MAT_Baby_Complications_Other"
      - "ME_MAT_Baby_Complications_Low_Weight"  
    grouping: "maternity"

  - key: "ME_MAT_Baby_Care"
    description: "Maternity baby care"
    indicatorQuery: "SELECT 'None',count(*) FROM maternity_baby WHERE care_mgt LIKE '%None%' AND '%s' = strftime('%Y-%m-%d', event_date)
                   UNION SELECT 'KMC',count(*) FROM maternity_baby WHERE care_mgt LIKE '%Kangaroo Mother Care (KMC)%' AND '%s' = strftime('%Y-%m-%d', event_date)
                   UNION SELECT 'Antibiotics',count(*) FROM maternity_baby WHERE care_mgt LIKE '%Antibiotics%' AND '%s' = strftime('%Y-%m-%d', event_date)
                   UNION SELECT 'Resuscitation',count(*) FROM maternity_baby WHERE care_mgt LIKE '%Resuscitation%' AND '%s' = strftime('%Y-%m-%d', event_date)
                   UNION SELECT 'TEO',count(*) FROM maternity_baby WHERE care_mgt LIKE '%Tetracycline Eye Ointment (TEO)%' AND '%s' = strftime('%Y-%m-%d', event_date)
                   UNION SELECT 'CHL',count(*) FROM maternity_baby WHERE care_mgt LIKE '%Chlorhexidine (7.1%' AND '%s' = strftime('%Y-%m-%d', event_date)
                   UNION SELECT 'VitK',count(*) FROM maternity_baby WHERE care_mgt LIKE '%Vitamin K%' AND '%s' = strftime('%Y-%m-%d', event_date)
                   UNION SELECT 'Other_Mgt',count(*) FROM maternity_baby WHERE (care_mgt NOT LIKE '%Kangaroo Mother Care (KMC)%' OR
                        care_mgt NOT LIKE '%Antibiotics%' OR care_mgt NOT LIKE '%Recuscitation%' OR care_mgt IS NULL) AND '%s' = strftime('%Y-%m-%d', event_date)"
    isMultiResult: true
    expectedIndicators:
      - "ME_MAT_Baby_Care_None"
      - "ME_MAT_Baby_Care_KMC"
      - "ME_MAT_Baby_Care_Antibiotics"
      - "ME_MAT_Baby_Care_Resuscitation"
      - "ME_MAT_Baby_Care_TEO"
      - "ME_MAT_Baby_Care_CHL"
      - "ME_MAT_Baby_Care_VitK"
      - "ME_MAT_Baby_Care_Other_Mgt"
    grouping: "maternity"

  - key: "ME_MAT_BF_First_Hour"
    description: "Maternity vitamin A given"
    indicatorQuery: "SELECT count(1)
                     FROM maternity_baby
                     WHERE bf_first_hour ='Yes'
                     AND '%s' = strftime('%Y-%m-%d', event_date)"
    grouping: "maternity"

  - key: "ME_MAT_Stillbirth"
    description: "Maternity vitamin A given"
    indicatorQuery: "SELECT stillbirth_condition,count(*) from maternity_baby
                     WHERE stillbirth_condition IN('Macerated','Fresh')
                     GROUP BY stillbirth_condition"
    isMultiResult: true
    expectedIndicators:
      - "ME_MAT_Stillbirth_Macerated"
      - "ME_MAT_Stillbirth_Fresh"
    grouping: "maternity"

  - key: "ME_MAT_Neonatal_Death"
    description: "Maternity Neonatal deaths"
    indicatorQuery: "SELECT count(*) from maternity_baby
                     WHERE discharged_alive ='No'
                     GROUP BY discharged_alive"
    grouping: "maternity"